<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Superstore_Canada)' inline='true' name='federated.10gnj1u0ac391c12trcg106mm66c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_Canada' name='excel-direct.1ro87pp0f2heag15icdy104d92xj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/adity/Downloads/Lecture - 01_06_2020-20200601T134522Z-001/Lecture - 01_06_2020/Data Set/Superstore_Canada.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ro87pp0f2heag15icdy104d92xj' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U8400:no:A1:U8400:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='integer' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='string' name='Order Priority' ordinal='3' />
            <column datatype='integer' name='Order Quantity' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='real' name='Discount' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='real' name='Profit' ordinal='8' />
            <column datatype='real' name='Unit Price' ordinal='9' />
            <column datatype='real' name='Shipping Cost' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Province' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Customer Segment' ordinal='14' />
            <column datatype='string' name='Product Category' ordinal='15' />
            <column datatype='string' name='Product Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='string' name='Product Container' ordinal='18' />
            <column datatype='real' name='Product Base Margin' ordinal='19' />
            <column datatype='date' name='Ship Date' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ro87pp0f2heag15icdy104d92xj' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U8400:no:A1:U8400:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='integer' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='string' name='Order Priority' ordinal='3' />
            <column datatype='integer' name='Order Quantity' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='real' name='Discount' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='real' name='Profit' ordinal='8' />
            <column datatype='real' name='Unit Price' ordinal='9' />
            <column datatype='real' name='Shipping Cost' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Province' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Customer Segment' ordinal='14' />
            <column datatype='string' name='Product Category' ordinal='15' />
            <column datatype='string' name='Product Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='string' name='Product Container' ordinal='18' />
            <column datatype='real' name='Product Base Margin' ordinal='19' />
            <column datatype='date' name='Ship Date' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U8400:no:A1:U8400:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Quantity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C36E7FDC90BA465393FBDCA4052D1C56]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_C36E7FDC90BA465393FBDCA4052D1C56]' role='measure' type='quantitative' />
      <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Order Quantity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[cnt:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Customer Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%all%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Small Business&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_C36E7FDC90BA465393FBDCA4052D1C56'>
            <properties context=''>
              <relation connection='excel-direct.1ro87pp0f2heag15icdy104d92xj' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U8400:no:A1:U8400:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='integer' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='string' name='Order Priority' ordinal='3' />
                  <column datatype='integer' name='Order Quantity' ordinal='4' />
                  <column datatype='real' name='Sales' ordinal='5' />
                  <column datatype='real' name='Discount' ordinal='6' />
                  <column datatype='string' name='Ship Mode' ordinal='7' />
                  <column datatype='real' name='Profit' ordinal='8' />
                  <column datatype='real' name='Unit Price' ordinal='9' />
                  <column datatype='real' name='Shipping Cost' ordinal='10' />
                  <column datatype='string' name='Customer Name' ordinal='11' />
                  <column datatype='string' name='Province' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Customer Segment' ordinal='14' />
                  <column datatype='string' name='Product Category' ordinal='15' />
                  <column datatype='string' name='Product Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='string' name='Product Container' ordinal='18' />
                  <column datatype='real' name='Product Base Margin' ordinal='19' />
                  <column datatype='date' name='Ship Date' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Inside_Sales' inline='true' name='federated.0jbru240djmfxr1cdbzg708e2pqt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Inside_Sales' name='textscan.1w8yzuf04rjbg912auuls01fhpwt'>
            <connection class='textscan' directory='C:/Users/adity/Downloads/Assignments-20200529T133433Z-001/Assignments' filename='Inside_Sales.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1w8yzuf04rjbg912auuls01fhpwt' name='Inside_Sales.csv' table='[Inside_Sales#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Product' ordinal='1' />
            <column datatype='integer' name='Target' ordinal='2' />
            <column datatype='real' name='Actual' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1w8yzuf04rjbg912auuls01fhpwt' name='Inside_Sales.csv' table='[Inside_Sales#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Product' ordinal='1' />
            <column datatype='integer' name='Target' ordinal='2' />
            <column datatype='real' name='Actual' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Inside_Sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Inside_Sales.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inside_Sales.csv_31D83DE31A384B2C825DE001E8EC4F06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Inside_Sales.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inside_Sales.csv_31D83DE31A384B2C825DE001E8EC4F06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[Inside_Sales.csv]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inside_Sales.csv_31D83DE31A384B2C825DE001E8EC4F06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Actual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Actual]</local-name>
            <parent-name>[Inside_Sales.csv]</parent-name>
            <remote-alias>Actual</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Inside_Sales.csv_31D83DE31A384B2C825DE001E8EC4F06]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Inside_Sales.csv' datatype='table' name='[__tableau_internal_object_id__].[Inside_Sales.csv_31D83DE31A384B2C825DE001E8EC4F06]' role='measure' type='quantitative' />
      <column-instance column='[Actual]' derivation='Sum' name='[diff:sum:Actual:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[diff:sum:Actual:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[diff:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[diff:win:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='CellInPane' to='0' type='WindowTotal' window-options='IncludeCurrent' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Actual]' derivation='Sum' name='[pcdf:sum:Actual:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcdf:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcdf:sum:Target:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcdf:sum:Target:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcdf:sum:Target:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[Product]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcdf:sum:Target:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[Product]' />
          <order field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[Region]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcdf:sum:Target:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcrk:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcto:sum:Target:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcto:sum:Target:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcto:sum:Target:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcto:sum:Target:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcva:sum:Actual:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcva:sum:Actual:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Table' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[pcva:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcva:sum:Target:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Target]' derivation='Sum' name='[pcva:sum:Target:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctValue'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[rank:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[sum:Actual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Actual]' derivation='Sum' name='[win:sum:Actual:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Actual]' derivation='Sum' name='[win:sum:Actual:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='CellInPane' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:sum:Actual:qk:1]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:win:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcrk:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:3]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:4]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:5]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Actual:qk:4]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[rank:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[win:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[win:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:2]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:3]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:4]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:5]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:2]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:4]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:5]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Target:qk:2]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Target:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Target:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:sum:Actual:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[diff:win:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcrk:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Actual:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[rank:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[win:sum:Actual:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[win:sum:Actual:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcdf:sum:Target:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Target:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcva:sum:Target:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Target:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Inside_Sales.csv' id='Inside_Sales.csv_31D83DE31A384B2C825DE001E8EC4F06'>
            <properties context=''>
              <relation connection='textscan.1w8yzuf04rjbg912auuls01fhpwt' name='Inside_Sales.csv' table='[Inside_Sales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Region' ordinal='0' />
                  <column datatype='string' name='Product' ordinal='1' />
                  <column datatype='integer' name='Target' ordinal='2' />
                  <column datatype='real' name='Actual' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Assignment 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.10gnj1u0ac391c12trcg106mm66c' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnj1u0ac391c12trcg106mm66c'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Product Base Margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Base Margin]' derivation='Max' name='[max:Product Base Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unit Price]' derivation='Median' name='[med:Unit Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unit Price]' derivation='Sum' name='[sum:Unit Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[max:Product Base Margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Shipping Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[med:Unit Price:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[max:Product Base Margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Shipping Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Unit Price:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.10gnj1u0ac391c12trcg106mm66c].[max:Product Base Margin:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnj1u0ac391c12trcg106mm66c].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Sub-Category:nk] / [federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk])</rows>
        <cols>[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]</cols>
        <percentages enabled='false' mode='row' />
      </table>
      <simple-id uuid='{9314EDA0-6033-4ECB-9F03-D94BC4BB4505}' />
    </worksheet>
    <worksheet name='Assignment 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Line Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.10gnj1u0ac391c12trcg106mm66c' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnj1u0ac391c12trcg106mm66c'>
            <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Ship Date]' derivation='Day' name='[dy:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Date]' derivation='Month' name='[mn:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Date]' derivation='Year' name='[yr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnj1u0ac391c12trcg106mm66c].[dy:Ship Date:ok]'>
            <groupfilter function='level-members' level='[dy:Ship Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnj1u0ac391c12trcg106mm66c].[mn:Ship Date:ok]'>
            <groupfilter function='member' level='[mn:Ship Date:ok]' member='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10gnj1u0ac391c12trcg106mm66c].[yr:Ship Date:ok]'>
            <groupfilter function='level-members' level='[yr:Ship Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.10gnj1u0ac391c12trcg106mm66c].[mn:Ship Date:ok]</column>
            <column>[federated.10gnj1u0ac391c12trcg106mm66c].[dy:Ship Date:ok]</column>
            <column>[federated.10gnj1u0ac391c12trcg106mm66c].[yr:Ship Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Order Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10gnj1u0ac391c12trcg106mm66c].[sum:Order Quantity:qk] + ([federated.10gnj1u0ac391c12trcg106mm66c].[sum:Profit:qk] + [federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]))</rows>
        <cols>([federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk] / [federated.10gnj1u0ac391c12trcg106mm66c].[yr:Ship Date:ok])</cols>
      </table>
      <simple-id uuid='{28DF5B7E-9ADC-4CE4-8CB2-B70BC74D7B1A}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stacked Bar</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Inside_Sales' name='federated.0jbru240djmfxr1cdbzg708e2pqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbru240djmfxr1cdbzg708e2pqt'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Target]' derivation='Sum' name='[pcto:sum:Target:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Actual]' derivation='Sum' name='[sum:Actual:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;North&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane id='21' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' />
              <text column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7801104784011841' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]</rows>
        <cols>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]</cols>
      </table>
      <simple-id uuid='{C160A390-C300-4DCD-A6B3-7E3C2640E48B}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Horizontal bar</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.10gnj1u0ac391c12trcg106mm66c' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnj1u0ac391c12trcg106mm66c'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Container:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Container:nk] / [federated.10gnj1u0ac391c12trcg106mm66c].[none:Ship Mode:nk])</rows>
        <cols>[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Shipping Cost:qk]</cols>
      </table>
      <simple-id uuid='{C14A2050-15A7-43CA-9548-BD4E38C28A76}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Inside_Sales' name='federated.0jbru240djmfxr1cdbzg708e2pqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbru240djmfxr1cdbzg708e2pqt'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Target]' derivation='Sum' name='[pcto:sum:Target:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;East&quot;</bucket>
              <bucket>&quot;West&quot;</bucket>
              <bucket>&quot;North&quot;</bucket>
              <bucket>&quot;South&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]' value='106' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' />
              <lod column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Target:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk:2]</rows>
        <cols>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]</cols>
      </table>
      <simple-id uuid='{81870F8B-EA30-49A5-B77F-C87BF84645BC}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.10gnj1u0ac391c12trcg106mm66c' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnj1u0ac391c12trcg106mm66c'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Order Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Shipping Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Order Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Shipping Cost:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]' value='205' />
            <format attr='width' field='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Ship Mode:nk]' value='99' />
            <format attr='height' field='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]' value='160' />
            <format attr='width' field='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10gnj1u0ac391c12trcg106mm66c].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk] / [federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names])</rows>
        <cols>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{E772670F-922E-4967-9990-BA4ED8649766}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada)' name='federated.10gnj1u0ac391c12trcg106mm66c' />
          </datasources>
          <datasource-dependencies datasource='federated.10gnj1u0ac391c12trcg106mm66c'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]' value='p0.00%' />
            <format attr='height' field='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]' />
              <text column='[federated.10gnj1u0ac391c12trcg106mm66c].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk] / [federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk])</rows>
        <cols>[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]</cols>
        <subtotals>
          <column>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{55ECE36F-E002-476E-8844-925FC3D3123C}' />
    </worksheet>
    <worksheet name='packed bubbles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Inside_Sales' name='federated.0jbru240djmfxr1cdbzg708e2pqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbru240djmfxr1cdbzg708e2pqt'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk]' />
              <text column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]' />
              <color column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B5C46BA-FBA2-4845-97C6-6A32B597DF85}' />
    </worksheet>
    <worksheet name='side by side bar chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Inside_Sales' name='federated.0jbru240djmfxr1cdbzg708e2pqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbru240djmfxr1cdbzg708e2pqt'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual]' derivation='Sum' name='[sum:Actual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Target:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[Multiple Values]' value='19' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk] / [federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names])</rows>
        <cols>[federated.0jbru240djmfxr1cdbzg708e2pqt].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{AB59CB7D-2263-4BC9-B88F-F686BE8EF7A9}' />
    </worksheet>
    <worksheet name='side by side circle'>
      <table>
        <view>
          <datasources>
            <datasource caption='Inside_Sales' name='federated.0jbru240djmfxr1cdbzg708e2pqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbru240djmfxr1cdbzg708e2pqt'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual]' derivation='Sum' name='[sum:Actual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Target:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <shape column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='asterisk' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jbru240djmfxr1cdbzg708e2pqt].[Multiple Values]</rows>
        <cols>([federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk] / [federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{B5BD9AD5-41C3-4ABC-87A0-E4EEB0C3D215}' />
    </worksheet>
    <worksheet name='tree map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Inside_Sales' name='federated.0jbru240djmfxr1cdbzg708e2pqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0jbru240djmfxr1cdbzg708e2pqt'>
            <column datatype='real' name='[Actual]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Actual]' derivation='Sum' name='[pcto:sum:Actual:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Actual]' derivation='Sum' name='[sum:Actual:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[pcto:sum:Actual:qk]' />
              <color column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]' />
              <text column='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{604B14CC-723E-4829-A297-7D389ECD14D0}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='21' param='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCD2B040-4A08-465D-BBE0-EC6D2468DE20}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4F94CAD-6699-494A-A156-F1EAEFBF3EC5}' />
    </window>
    <window class='worksheet' name='side by side bar chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]</field>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]</field>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{875E9AEC-B168-48EC-A2BA-87332E7B6F05}' />
    </window>
    <window class='worksheet' name='tree map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jbru240djmfxr1cdbzg708e2pqt].[sum:Actual:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F2BA44D-BF83-4153-9769-85E392AF62B2}' />
    </window>
    <window class='worksheet' name='packed bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{889B037C-6ED1-4C33-A8B0-B2A6A9D4637A}' />
    </window>
    <window class='worksheet' name='side by side circle'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jbru240djmfxr1cdbzg708e2pqt].[:Measure Names]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{F2B88F0A-B8EB-425F-B4B8-538AA71C8A27}' />
    </window>
    <window class='worksheet' name='Assignment 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D82D9175-0C93-44CC-A2E0-142522A1CE14}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[:Measure Names]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{76FE9F53-17E6-408B-8798-A7AAFED19100}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Customer Segment:nk]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0078DE3-89D3-472C-B1F4-911C8CE2B1B4}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Container:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Container:nk]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D854318C-D202-435F-8CB6-AD4D919AAC02}' />
    </window>
    <window class='worksheet' maximized='true' name='Assignment 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10gnj1u0ac391c12trcg106mm66c].[yr:Ship Date:ok]' type='filter' />
            <card mode='radiolist' param='[federated.10gnj1u0ac391c12trcg106mm66c].[dy:Ship Date:ok]' type='filter' />
            <card mode='radiolist' param='[federated.10gnj1u0ac391c12trcg106mm66c].[mn:Ship Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Category:nk]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Product Name:nk]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[none:Ship Date:qk]</field>
            <field>[federated.10gnj1u0ac391c12trcg106mm66c].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E3581053-89D0-4568-9BA2-DB53E1A447DA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Assignment 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eVRUZ7rv/6kRCqoYRaCYBwVBFAQFRJzFKdoZHWLG7nO8pzt9+nT36tPn
      3HV/fW+vM91zc7o76SnxEBONGk2MmjijkZliUkZllHkq5rGAqoKq+v2BokZFjOAQ6rNWFqmy
      3r2fvWu/td/9fN/v+whMJpMJM2ZmKMInHYAZM08ScwcwM6MxdwAzMxpzBzBzT1paWp50CI8F
      cwcwM6MxdwAzMxpzBzAzozF3ADMzGnMHMPNEGaxMYNtL71A++GT2L34yuzVjZowrGRX83U+W
      kZFbh4t3F43SQOZbt5PVIkM5UsalK414hYSzbknwtOzffAcw8wQxcLlTR2zMElpzM7C1k3Dx
      nIqixPMYpH0cOlPPm28/x9V01bRFYO4AZp4Ypq5C6hsH2Xcgkeb6crrtQrAaLiOtA6LcBAjF
      MoSjekaM0xeDeQhk5okxMChk9z//mhA3axoK0hkcgK2rwijVuiGRebM2tIhPj3yNVmBDb20e
      JcNuxAS5TGkMAvNsUDP3oqWlBaVS+QQjGCH5xBGqeoSse/EVvO0tpmUv5g5g5p48+Q7weDA/
      A5iZ0ZifAcxMGYXH3+WLajvs9W0seXE3obImqvEj3MfuEbfcS7aqhaiYoPv8ez2/evM9/CO9
      0NuE8LPX1j4wzp6IX7PKy9wBzEwxcdt3s8qtk3/7r88J3RGNTGZJR9VlTiYVEbx8M4ucdXx5
      4huUi9YRMWuQYxeyCIp9jlDbbmrwxZcaavBluCaHzo4memVzCbGuJD7+Mk3a13l5Tfg99+se
      HMvf/eQl/t8ffkdrqYx2o4IunQJ/y2YuZFUT+9xLzLUf4eSXJ6i4WsWSCCgszDMPgcxMA2JH
      jMZu+uryKGvVcubUGbxCovB1kbP/44Os3vE20YFO7P/iNK+88QZXvthPS2sZZa1atDf+5qlU
      BMdto7MgFWXMMhYEx9734gdoKknnvz98H4UygtYyFedKhlm+0JIvTlfyxhtb+WL/JyTt/xin
      1TtYG+ELmDuAmWmi5eoZpLOjxl9v3vYWjqMVfPDJuQnbaXVaOto7xl6IrJDLJEgkYkCITj+I
      cYJ8jXtwLP/jxz/nJztWAhAZFYlIcOdnRkZMWFqI0Wv1AOh0OkS//e1vf/uwB2jm+8/AwAAK
      heKh22UlJ6A2ePDDHasRAZb2SoYbrpBT2sGKDRtYHzOPs18ep0/iwqYlPhw7cZaFm7Yx38+L
      kqRzmGb54e3tg5NcjNLDHTGg9AhGrqsgp2GEeT6u99mzJe6eTuOv5E6e2Fsp8LAf5MTZbDZt
      20VEhD8pJ75ixM6TwMAgZo00m9OgZu6NOQ1qxswM4K47wEzxgpqZmO86BHrWMA+BzNwT8xDI
      jJkZwAOzQEf+8n84mtnM6qgFE26oPjmexD4/qM7CMNsHuVliw9DXyFdnEqm+Xka73govZzsy
      zn1BTb8Ey94qEjKrcLDVMSCYhUJ6/+2YBtWcPptI5fUKhsSOuDpYTzqG9LRUvFwVVDYO42hn
      Nel2Uz0Eampq4k9/+hPl5eX4+voik8kwmUzs27ePtLQ0xGIxAoGAvXv3UlFRgb+/P3v27OHa
      tWuEhISQkpKCr6/vlMVzk4kvU1MfXSZvlLpmekzQm59OUaOaYbGSV56bT8rxFJp7u1i8cTu3
      vhIZlpaQk3CY4uZR1r6wA2qvUNnZgbpXxo7tcdRnnyetpIvndu6iKeNLitsteWXHVtoLLpJU
      1MTyzTsIdJ38l/W0UlJSz9oXX8RWCJlp6TRWdFLW1Mdc+24uZOUj95qPVGqDSQq63iaSVUV4
      zI/CRdBK9tUmwpatRmkrYWSgDRwD2bAsAIlQQF19Pd5eXjf+OlKYXkBzv47I1asQdDdQWlmB
      0caH5eEB47FILSwwDHeRlpqNjW8Y4XMcuZySTLfImTXLw6Z9SkBHRwdvvvkmHh4e4+91d3fj
      7+9PbGwsJ0+epKmpiR//+MdYWlrS3d1NaGgo/f39FBUVsWTJkmmJa8Ih0GCFCoNHBEt8hGRV
      DFKXl41L1PP4D2aSVNVGXomG13Zt5eThg+NtylTZ9DHKyIgJQ+91Dh7PpC5PhVVwHMrOAkrK
      s/mySMgP33wJafV54hMqGKhOYl/CNU6duUhIVAwu8u/HyGzAJMTmxqFYIMQxIJzFERGsiI4m
      JGQB67esQNqtplsP2ZdLWLlxI/4uQi5dSMdgGCIxOQMAqUso0R4jJJz+iuL6Xuob6gGor28A
      NGhQsnFNGMVXiuhuVjN3aRz+pgbKem4Eou+mXq0hN/kS3ToDly8m0jvQyPUuIf4+7o9lHGxn
      Z8f58+d57733aG1tHQtLr0culyMQCBAIBAwODnL48GHef/99tFotOp0OuVyOTqfjk08+4dix
      Y1Me14QdPyuliCFTE3kGHW0pWSwTCpFKxWiGjUglAiRSC4wjWhBKAcOthppyUsqt+Pkrq/nL
      RRMgQiGXMSqR3LkDkwnvRav52c4I+jXDaILfoTb/FJ+ULOOX2+8vez8rzLUxklndSbSbkJZh
      AxMdkUAkYky4NKJwDWLD5mUM9GsA0Pd1gFMAm+JcyChoxGgwYDDo6OzuB8BSJsMwqscoEILI
      AplEQIfegER05z5MUgUrV29ArhvAZCkmbrUD11VpiJyex9tyOs7ALUZHR3n99dcpLS2lpaUF
      FxcX7OzsSElJwcfHB71ej7u7O35+fvT19aFWq1m3bh2pqak4OTmxatUqamtrpzyuCZ8B2kZE
      bHvheRYviUI43Imxs4qU4uvYzF1J3EJrTu37isZ+LS+8tgtbCxGW9kqc5GKc/BcgabtCpcaa
      eX6+eCjtsVd6IBeDw9xo/LjO19/k4bfieRw7LpOQXoiDVwAdJamUdkjZsGElDtaS+4X1zGDt
      7M5w7RVyy1qJWbEcmXjsEpffGFsr7OwQASIrBb6zpCQnZWCwcmeO0wipqjxQOONsb41AMEpx
      dgYl9f1ExUTgJBkiJacUV28/3GZLUZ1Pp3HAQEzsYjRNZeQWlyFxW0CImw0w9uuLyIogfycy
      U1JpGgBvNzuKslQM23qz0Mf5rrvAVD8DiMViTpw4gclkYtmyZeTn5+Pp6YlAICA1NZXnn38e
      X19fkpOT6e3tZcWKFej1eiQSCd7e3mRmZhIUFMSsWbOmLCZ4yDRobV4WsuBoXCzhwVNUzTwe
      NKjV4OoqB6BLrUbh6soEz9STYqakQc06gJl7MlM6wF3PAGYl+NEYGRl50iFMCYODg9+bY5kI
      8x1gihkaGnrSIUwJHR0dODk5PfiDzzjfj3yjGTPfkQmzQIXH3+WPZ0qozDxDldELp8FSGgyz
      cbqHzNtbeJwDZdZT4P+8RXL8H+jzG3voPv7ubzhTUkXmma8xei1msDTzvopz4fF3KbOO4UGh
      7P3933OxEJYtnjNlMd8+bDD0N3PmQip11ZV06K3wmG1L1jcnqNdIsOytITG3BjsbPYM4IJ9I
      CR5qI+FCGjXV1xkSO+BsP3mRMCtThYeznKrmYRxsZZNuNzQ0hLX15BXnB9Hc3MyePXuorKzE
      29t7XAk+dOgQKpUKkUiEq6srJSUl7N27l8jISOLj4ykrKyMoKIj09HS8vb2nLJ6bTNgBWstU
      uMX9jFUefeQ1yJjnpAd7X8pyzpCvyqBBp8BPaU3yyc9JyylA4LaYOeJGDh09jcHWA+u+ckqb
      urhW3YWptYBj51Oxdg1glkLCkLqcQ0e/oqZXSJCPjNQzyagy0tApPHGW9nPsyOdcKaomcNV6
      XCyhTFVM3M9+gkdfGQ2yeTjp+7H3ncWVby6Qo0qnSzgbTzsDJz8/TE7BVdwWb0HcmMbR0ynY
      egTQV36Fpi411V0iPJzkoG9AddUCoaaMsJhlGHrq+Pzwl3QKHLHT1XP4yzMIHH0YvJ7O8YQs
      ZvsHIWgv4dDRU/SJHPFxuXfvur0DlBWWsnDVGoLnBtBSVYpA182V0gYcHBQU5hYhtXPC19MV
      oUyOUNNCaloWeqk9woF60rOLsHbyQG4hYrS7hhqtM2tWRqJ0sKKhsRFbW9sbf0VczcqjqKwG
      O6UH2o5GCgvzaOgx4uHiQFNjIx5KJzQjUuQiDaq0dHpN1rjYS8jPSKW0WYOnx91p0KnuAHV1
      dURGRrJ8+XJksrGO2NPTg8Fg4MUXX6SgoAAfHx9yc3NxcHDAzc0NoVCIRCJhaGiIkJAQpNJH
      zW3dzQOHQBe/iOdEZguBvva0lqmo6wOV6gpx216jIPUENUn7aXJazStrIwADe/7yZ7QGHX/+
      IJ6+ujy+zGxhRVTgXSrvqGEETJD0yQEa6EN1pZ1tr60g9UQqJz7Zz/wtb7Bs3u3uny6+iP+I
      zBYhvvbSG4qzFlVOJVtf3UpOwrk7PZ8GNX/58xcYdK18EH+UurxEMlukRN1YWaw1Pw35/MWE
      2IxS2Gq4zasq5+OD37Dj7bcIlDfyfnwChoFq9uxLIOXUGewCwwl0d5jUydUgRHHjDFsiwN5/
      IWFhYcQsXkxwUDCrN8Qg6WmjRw9X8suIWbsWn9lCUhKzMBiGSU3PBkDivIDFbiMkJpyhpLGP
      xqZGABobm4BBBnFh7fIFlBReo6e1Db/IVfiaGqnsvRGIvofGtkHyM1Lo0RnIT0qlT9NCTY8Q
      X0/lYxkH29jYcPHiRf7617/S3t4OjP1Y3FSCATIzM1m5ciUCgQB7e3v0ej3W1tbodDoOHjzI
      119/PeVxPfDY47bv5u1XIslMyht/T2RlhUwiRSKG0ZERLCwt0Om1Y/8md2b7Wz/mj7/5CQAR
      kZFIhQa2vfUOoxUJfHKuBICUo2dY9NJrhHk7YgKsrORIpBLEwOioAAsLITr97VkIR7bv3s0r
      kU4k5d1SBC2srLEQS5CI7vZ8yp0DeOvH/8hvfvIDwIrIyNDxA07LvE5v+XmqNcOkpxXe5+hN
      OHov4kc/+//41ZuxRL+0iwBxF+9/dHgy5xY/hZHc2i6M2h7UWhMTDVwEIvGN2IwoXAJYv2ET
      G2NDARjp74RZ/qxbHU2vuhmjwYjBoKO754YSbGmJcVwJlmIpFqAdMSL+1rdrlCqIXb2eV7dv
      xMLCmVWxoXRezaFJN6nDeSQMBgM7d+4kJiZmPNNoY2NDZWUlPT096PV6enp6OH78OFlZWZSV
      lbFq1SqEQiGzZs0iNjYWybdnEkwBD5wNmpWcQHFlHy++9gK2FqIxr6UleLh7AhC6LI7qlBM0
      jdgRGDiP1QvdOfn1KVr1cuZ5u4yrw6XZF+9QeZ2VCpIuZOA+dz5+c72wHPd0WrJydQjnj59E
      4jyHwHlzbozzu0hOSKGyz47XXojFQiTAydMdS8S4eygBMcvWRd7yfM5bwkJ3LV+fSkQvd8Xb
      5ZYaDSZ6sWDb888TER2BqaeXzRsib3hVPdgU6caXx88h8YhmkXMPJxPSETl4Ie27TnpBLTHr
      NmJovIJaqKQh5yJC5ZzxZ5Hbh0BWTkq09YXkVbQTuSway5tKsHxMtJLb2o4pwTI5Xo5SMtKz
      MVgp8XUcITOnCOROONmNKcEll7Mob9QQsSSUWZJhMvIqcPb0QekkJScxm2aNgaioMDQtleSX
      VCJ2CSJYOaYE29ragkhGoM8scjMyadGAl9KGa5dz0dp6Mt/LadqHQCKRiNOnT2MymYiOjqaw
      sBAPDw8EAgEqlYrnnnuOkJAQwsLCcHd3Z968eeh0OsRiMV5eXuTk5BAYGIijo+OUxQTmNOiU
      8/jToBra2sDZeaxTdbe1IXd2fmQleKakQc2z9p955Dg733rlcPsLMw/ErASbuSdarZbe3t4H
      f/AZxzwEMnNPZspcILMSbGZGM+EzwM3Vfj0Eauyj3mBnrM99P3v83feJ+PXP8ZryEJ9dWvNT
      SW7uR44Nq7asQD6JNhp1BQOKABhQ4+p6v1XQnk2qq6v58MMP+d3vfgeMZcw+/vhjjEYjfn5+
      eHp6kpyczIYNG3B3d2fPnj1YW1vzxhtvkJaWxpo1a6Y8podSgsPcRzjy2Zc066yZ4+7IlW+O
      cT7rOj4BAdTm5KBcupCi1Mt4utuTcOwIOfVDeEi6OXLsFGqdNXPcrbn45WFSC9UELJhDedop
      TqcU4REQRHd5OkdPXULk6IOL3eQl+6cZjbobn5UrCQ/wRqpRUzdggZ24l7p2I8OaLjpqiuiT
      yGkpKeFyYQEWs7yQGYbR63s5fSaBlhYNbm4WtNyznTOdFVlkl7bg7uWBZIrv5VNtiDEYDCQn
      J+Pq6sr8+fOBsYxZV1cXL7/8MtXV1SxdunQ8zSkUCseV4MHBQRYuXIiFxdRXiXkoJfjz/V8Q
      88obGK98QVrmeTIG5rBzzWw+3p8EdPHXf/89joFh5H7+CcKwLby0KoyRUT2Y4Nj+A/Q0X+Fi
      lZGYyBBM6mz+/EUOutZ84o9mcerMeQLDl+LuMPVy95NjgOTTpzl9MQu9Rk19t37cn9tQfgWt
      7Ty8HfW09FiwPi6SlqoGNOp6NApvIiIi2LJlBfL7tHM3VnApv4WR7nKS8xqf9IE+kNzcXGJj
      Y8dVXwCZTIZWq2X//v135fcdHBweiyf4OynB98aRjbE+5JU03fHumWMXWb3rNQJdFYzaBvHO
      tigS9v2ekk4TzgHR/Pgf/42f/GA+L+36EeKubD46nPkox/OUoWDVli1siYtGigDD6Ch9HR3o
      AYmdO0HeY1+6wywnRBJLLG4bkOqHhxk1GjHep51xdASf0OVsfek1ls2bWnFoOujq6uLkyZOo
      VCry8saupfb2dmxsbPjRj35EWVnZXW3WrVuHQCAY9wQ/cSU4Osyb88dOYLVwE2ujoxA3ZXDp
      qpZduzZiKRYwN3YjxoarhG7cTG3y1+S16Nmw1JeLiQX4zQvC392GpG+SkXpEsGrlclx05ZxK
      zEbuOhdNbQ4FtVrWbYxjtu30FER7EkgVijFRytqB9qJUWo02eLu5YSeX3jbEkKJQSAERCoUM
      qcKO2ZJBkjPKcQ8Lpfce7UQKV0ZbrpBbVIODuxc2llN7cUz1EGju3LmEh4fj6enJwoULycvL
      IyAggNbWVpKSkli/fj3Xr19HpVJRU1ODvb09VlZWT5cn2MzMwZwGNWNmBmBWgqeY74uP1uwJ
      NvOdMHuCny3MQyAzM5oJleDR3hp+/+fD2M2eRfTmFSQdLuXnv37pHp/Ukpycx6pVMfff2EAt
      //JfBxGJYfvPfoO/nQAwcfHAe1zTyFH6LcS5XoX9tl8Seg+3YW1eIviteaDP93ZaS1UMKx/s
      DZ4u2opVZLQMYI2CZRtiJqcEt1UxaO0Pg204f49mdjY3N/PZZ5/h5OTE888/j729/bgneGBg
      gKioKAwGA1evXmVoaIidO3dy9OhRrK2t2blzJyqVipUrV055XBOmQS/t+4CAXf/M8yuX4Gwz
      RNKpDBoayzHY+2I7XHebp9eJttYeZkl6yatpo7i0EUtN1R3KrrG/joxGORs8tfS5LMLTRgQd
      eRzMl/E/39nBfH936vIyKG/vpKi0hflB7qR9dZhLWaW4zg1itLMdmdKDq1cyUJcUMiI2kJSa
      SVZOKUO9VSTl1BM435OM8TZKTvzXf5Bc2YHSL4i6zK84n1qIa8ACFNO46uLt4+bBtl48Y2II
      9fdEqmmjQSPFVtRHQ6cB7WAPnXXX6Bdb01pWTsHVq1g4uGNp0DIy0kdCwiVaWwdxcbGg9Z7t
      nOi6fpkr5a0oPdymXAl+Ep7glStXEhISQkdHBzY2NlhbWz9ZT3BfnwhHx9tuErLZbHttBUlf
      Jn3L06slOysPbWsZh86VsGL5oruUXZ1BimV7KucG5iFtymMUMAz0IXG8c5zpvzgOZesVSvrG
      VpjWqfM4dOEadXlZtGoh8cQnSAOXY9dbRqN4LqFWlXQ7rca5PZ+KO9o0ERMbTNz23QTN7uLM
      xSqiYiJ5vAtPD5CRkEBC0mX0g2009ujH/blNlQXobObi6aBH3WfB6tXhqGubGGxrRGPtSVhY
      GBs2xCC/TzulsYrUolZGeivJKGx+nAf1nZiMJ1iv13PkyBGMRiNubm5P3hMcsWQ2CQlXMegH
      6OrTjft2RSbTXZ7em4RERmEtEtyl7BYnJhDx1r/g2/MVOU1SxIDIIwRjaSLdWgMdnZ3cXEVa
      IhFjarqCqt+TVzcv5fbndCtlIKFeY2MamZUVQqEQudwaSwvpXW1EYhFDQ0OYRm14651tVCTs
      41xJx1SfwwlQsGzDBjasXoxUMDYfpr+rc0zRtVUS4DlmrndwdEQktrhTCdbeUILv0840OoLX
      gmg2btlGVID9Yzym78ZkPMHt7e28+uqrKJVKqqurn7wn2N4nFFlrNmdTr+I9fwE2FrJx3254
      lO9tnl7vG95cV8RyJ5T2llTlp9yh7LrNmcPls8dwXPwSHtZaPD3cQGRNeJATJ4+fZEjmiq/S
      Ydy3az93EaKadNQ44efrh4eTfPzfbvqRxXInlHaWyJ08sbO8u01YaBCXE77Cwn0OVaokOqQe
      bFgZgbVEcL9DfmS+nTqUyuVjSrCVHR0lKtqNNni6umArl457g0GKXD6mBFvLZUjltmO+3+zr
      KENC6L1HO5HcmVF1EXkl9dgpPVBYTq2570l4gjs7Ozl79ixSqZQlS5ag1+vNnuBnDXMa9NnC
      nAY1M6MxK8Fm7onZE2xmRmOeDGfGzAxgwg4w2lvD//vXf+O//3sPxU2P+nA3phU8kPpk3vz5
      v/DBe//OoUt3myRuUqpKplX77abxHC98uNt24fF3Sa5/qCaTJi/1NPF/+SvHT5+mrkt//xjy
      8ye3wdZ8Uq9rpii6x091dTW/+tWvxl+PjIywZ88ePvjgAy5cuIBarea9995j//79aDQa/vSn
      P/Hxxx8zMjJCYmLitMT0EEqwhJKM05xKLkLpH0DHVRVpl3MpqGpFfTWTa50CAm2HOJ6QSpaq
      AJe586gsLUbp4kJeYSG65iLe+/Aw/RIHgl0EHD50lFaDLX7WfWSUNlF4rZoAPw/oq+O6JJSf
      /3Adl06cJ3SOLYePHKdfMhtnU/O40mwnEmLvO4ucc6fISMtkxM4Lq74yMsrbKS8qxXd+EB0l
      914duiXvFOdTC3DwnoeuLhutMgbD9Yt3rF49FSi9AxAM64iMW8dsKyFVBRnjHl59Zw3fpGQi
      ULjS11hMWVkVeqvZ2I50k196lcLiWpQ+Xgw0lZCckY+loxu2xk7q9Y64SbtJvJRKv9AGVwc5
      DSU5pF8uRSC3Z7C3A1tbW3qamjAqbJB+x4zvk/AENzQ0sHPnTiIiItBoNE/eE3y7EmxQZ3O6
      Us4bW0PY/8kJ6vKymb1kK30l2QRv2sG1rHPQV0eJxoVdW/05fDCJvMKxRWfzCgvxCY9hQUg4
      r2+O4fM9f0GtNXD8zx+g7qvjky8zWb4iany/Jemn+PD9eJQRK/n4L+/TN2rg47/uofs2pfnm
      6tDZhY3seH0b54+P1Sqe7b+YFcpWkoor7rM69Kw7ahiPYZz2GsWjHVdv8/DWkF1YR9zGjXg6
      WDJismTFhjj6mirRdzcx4jiPNYFiKjv6yS/tY8OGVZTmZ49vKyu3mJi4DQjqi2ntrOD6oCub
      Ns6n5XoXwq4m6gdNVDY3Yz19csdDMxlP8JOoEzx5Jbj/20sIi5DJLBBKrLGWiZFYjP1qSi2k
      jGiHEUqloNMxrBuks2cQEKHXD2EwmTCJ5Gze/hbv//E32AOBEZHYSW+FEhy7lR///J/YsXIu
      ApkjL+z6EX/9v79Cwi2l+SYSqQVCow6TaWz/coUciUSCyWS69+rQN2oYv/bSaqTjz/93r149
      1dzp4Z2FWHTreG0dZmEhkmBhIQbEODnZY2k5ucK9JsMoIktLDDodo4D7gmDqUk8gsPGfluP4
      rkzGE+zu7k5cXBzr1q0brxP8RD3BtyvBPlGb8Bot4Wx2M9t2vYhcKhxXZpUe7ogBT8Uo+75K
      oV9rw2u74nCXDnAqtYx5C4Lxc/fG1tRBYmk3r2yJIenk15S16gma543Y0h5Pp9vmSt72Oshf
      yfmvT1LdJ2L+HHekN5RmACfPWaR8cYSatiGe274LB2vJ+GrUlg5zifAevXt1aCsHDLfXMHa1
      R+7kgbrw4rTVKFbY2SG9w8Prg+8sEYmpWYjt3HBUWNyqHSxXILJSYCUCpLNwl/eTklnE/MXL
      sLWSgFRBkKcNaUnpWPmFMcddSff1XK7V1CO0dMfX05n6qgZCoxZ85+EPPBlPcFBQ0NNdJ/iB
      9NaiapERc6MIxfSjJTurhKjoZ7+q/HdmVENGchp9JgXLVy1DU1NAt8ybYM/JFfG4HzMlDWrW
      Aczck5nSAcxK8BTzffHRmj3BZr4T5slwzxZmJdjMjGbKlODE5KlW6up5/93j4///qzd/Tnx8
      PKrS1inez/RRpErg04/2ciohgYbu+yvBV4uLJ7fBtmJU1c+mEtzc3My7777Lvn376OnpAcbE
      sVOnTvHZZ58BUF5eznvvvcenn35KT08PH374IQcOHGBkZISUlJRpiWtCF0XSkSOs+Nt/Jspl
      7GMlGafJqh7muZdeZLgii6JGNcNiJa88twwrmSUwStqpz6nVzmbbK3EU5mQg6uvGY0k06adO
      MjI7mF0bowHISThMcfMoa1/YAbVXqOzsQN0rY8f2OOqzz5NeUUk/7uOxuAfHsnv3mCG/KOUr
      cqp6WL55O4L6POxCY6nJy2RxTMxTVfNpYcwGBGThGxONHBM1xVlU94hZtmwxpu46Mgoq8V8Y
      zXBvM8kXW3GbH4m35TAl9Q10dI+ydOVS9OpyrpQ2ExSxdPxsjGjayMgswtF/IQt8nWkqv0JJ
      wwD+IaFYGAdxd3Ont6UFqasSq6dEDOvq6mLXrl24ubmNvycSidi6dSvJycnAmEf47bffxs7O
      jp6eHhYsWMDAwADXrl0jIiJiWuJ6JCXYJep5/AczSarSkpWtQp39OV/kqGnNP87RLPW4f9dw
      bazSfGSI740tj96hxtblqbAKjkPZWUB5TT5fXDbw9mtb7lhFoakknfj4ePJqex0vINMAACAA
      SURBVNGPjIBOzYFDF/Cb48z+//otXVKvp+ri/zajnaW3eXjruHy1gdVr1+Jmb8mI0ZKYNavp
      a65G39PCiMNcVswRU9M5QFFFH2vWxFJRdGV8W5fzSohcvQZBUwltXVVUD7mwbm0grTXdCLta
      aBwyUaVWPzUXP9zbE/xt7O3tOXHiBB988AFCofAp8wTfpQQLkUrFDA8bkd60GJpMBERv5h//
      7X1+MN9+3L9rG7SZbVGO7Pv9B3QA3KXG3vQCS8AwilBqiVGv4/YcxNgdYDfhPhouqvp57dXN
      KEwmRkb0yCyEaDSPodjtI3Cnh9cR0W1FfG0cHJGKxONKsKOjHRYWk1OCMYwillpi1OsxAMr5
      gTSoTiOU37+YyZPgXp7gbyMUCnn99ddZsGABHR0dT5cn+NtKcOfVNFKKr2MzdyVxC90QAPOi
      1qEtTyIxuwzXuUHYy8R4uHui723gm+QcPCJWEOGnRCD9lhqrvFXD194/Eqf+PFLLewkODMTb
      82Ym4mYdYQWS4UoK1BDk54tuYIBlL+1Cpy7B1cML0RP+1btX6lBua4v0Dg+vFz4OQlIzLyOx
      dcVebnGrdrC1HJFMjkwESB1QyjWocq8xb1EkNjIJSOUEeCjISstC5h2Cn9KVnpp8yuqaEFgo
      8fZworGmiZDFwTyK9flxeIIdHR05cuQI3d3d1NXVERgYyMmTJ1EoFISFhT3dnuDavCxkwdG4
      TPKHaqbw2NOgo4NkZ2TSb5KzdFkUg/XF9Fh6Euj+aCtFzJQ0qFkHmGLMOsCzhVkJNnNPzJ5g
      MzOamTIXyKwEm5nRTKpOsI8dLNv6BkGTfOKN/8P7bPvlz3lCizI/NRj6Gvn6m8tIJWDnE07s
      Ai8yzn3BqHMogbIeMq5rWbbEFZMiANcJlo42Dao5fTEHgUiAe/BSwvwmPzZPT0slNmo+lS0w
      1/vJFtN7UJ1gmUxGSUkJUqmUnTt3snfv3mmvE/xA7Shu+25WeQFoyfjmLGp1K85h65nVX49z
      VAwjFZkMK6PozD1Gcbslr+zYOt52IuW4LO0UObVafrDtFbRV6SRkX2fxuhcJ9X7617mcLCUl
      9ax98UVshZCZlk5jRSdlTX3Mte/mQlY+cq/5SKU2mKSg620iWVWEx/woXAStZF9tImzZapS2
      EkYG2sAxkA3LApAIBdTV1+Pt5XXjryOF6QU09+uIXL0KQXcDpZUVGG18WB4eMB6L1MICw3AX
      aanZ2PiGET7HkcspyXSLnFmzPGzaRUSDwUBBQQGLFy8ef0+r1aJUKomLiyMxMZHW1lb+5m/+
      hqKiIsrKyggNDaW/v5+ioiKWLFkyLXFNqk5wfHw8tb1aVDmVbH11KzkJ55CPVnIpv4PziXlY
      qBOIT6hgoDqJfQmlYwc8gXL8TUbKDKgRDAMmITY3zrAFQhwDwlkcEcGK6GhCQhawfssKpN1q
      uvWQfbmElRs34u8i5NKFdAyGIRKTMwCQuoQS7TFCwumvKK7vpb5hbBmL+voGQIMGJRvXhFF8
      pYjuZjVzl8bhb2qgrOdGIDdqDOcmX6JbZ+DyxUR6Bxq53iXE38f9sYyDJ+MJXr58OQcOHCA7
      OxtLS8vH4gl+iDtALxZW1liIJUhE4Bkdx9d/2Y/ENggbTHgvWs3PdkbQrxnlaOW9tjSmHGuG
      jUgljNUI/ukG+vqH0PXPprYinY9ym/iff7duqo/xiTHXxkhmdSfRbkJahg1M5FsTiESMXRpG
      FK5BbNi8jIH+sYlv+r4OcApgU5wLGQWNGA0GDAYdnd39AFjKZBhG9RgFQhBZIJMI6NAbkIju
      3IdJqmDl6g3IdQOYLMXErXbguioNkdPzeE+zntPV1cXVq1cpKSnBz8+P8PDwcU/wCy+8wKFD
      hwgJCeHNN9/k4MGDeHt7ExwcTGpq6rgnuLa2dsrjmlSd4Ly8PGRuwTjJLXH3UAJi3L0DEAw0
      4R+zHnffACxaLpOQXoiDVyBOCgvc5kXhNHjtnsrxhpglzNJ+/2sEWzu7M1x7hdyyVmJWLEcm
      HrvEx/2/dnaIAJGVAt9ZUpKTMjBYuTPHaYRUVR4onHG2t0YgGKU4O4OS+n6iYiJwkgyRklOK
      q7cfbrOlqM6n0zhgICZ2MZqmMnKLy5C4LSDEzQYAOzs7EFkR5O9EZkoqTQPg7WZHUZaKYVtv
      Fvo433UXeBKe4L6+Pr766itiY2NxdXVFp9M9Y57gCTArx9OFBrUaXG88RXep1ShcXXnUweRM
      SYOadQAz92SmdACzEjzFfF98tGZPsJnvhHku0LOFWQk2M6OZMAtUePxdyqzvUWe3t5A/HCgj
      Ovwepov6ZN5N7HuMi2M9Xdw+bDD0N3PmQip11ZV06K3wmG1L1jcnqNdIsOytITG3BjsbPYM4
      IJ/gqdU01EbChTRqqq8zJHbA2d5q0vFkZarwcJZT1TyMg61s0u2m2g8AUFtby+9+97txRXdo
      aIhPP/2U/Px8RCIRvb29HDx4kMrKSry8vNi/fz9lZWUEBQWRnp6Ot7f3lMYDD+gArWUqtDcK
      TffUFXHk2CnUOmvmOI1y7lwOtXUV2HnNw3KwbnwFZy+LblQtMkIUHRw6eoo+kSM+LjNnUsTt
      HaCssJSFq9YQPDeAlqpSBLpurpQ24OCgoDC3CKmdE76erghlcoSaFlLTstBL7REO1JOeXYS1
      kwdyCxGj3TXUaJ1ZszISpYMVDY2N2Nra3vgr4mpWHkVlNdgpPdB2NFJYmEdDjxEPFweaGhvx
      UDqhGZEiF2lQpaXTa7LGxV5CfkYqpc0aPD3uToNOdQcwGo2kp6fj7OxMUFAQAK2trVhYWPDc
      c8+Rm5uLSCRi3bp1REVFodVqx1eHfmJ1gm9nZFQPJji2/wB9gGz2XF5/cTFHDnx1xwrOgzc+
      n3LqDHaB4QS6P9oSfc8yGoQobpxhSwTY+y8kLCyMmMWLCQ4KZvWGGCQ9bfTo4Up+GTFr1+Iz
      W0hKYhYGwzCp6WMrQkucF7DYbYTEhDOUNPbR2NQIQGNjEzDIIC6sXb6AksJr9LS24Re5Cl9T
      I5U3ZzPfqDGcn5FCj85AflIqfZoWanqE+HoqH8s4+PLlyyxduhSh8Nbe3N3dGR4e5siRI3R0
      dDx9nuDbOXPsIqt3vUagqwITY3NLRnTDCEXSO1ZwvtlHo1/aRYC4i/c/OjzlQT8r+CmM5NZ2
      YdT2oNaamGjgIhCJb3wZRhQuAazfsImNsaEAjPR3wix/1q2OplfdjNFgxGDQ0d1zQwm2tMQ4
      rgRLsRQL0I4YEX/r2zVKFcSuXs+r2zdiYeHMqthQOq/m0PQY7NQ9PT2cOXOGrKwsCgoKAMbt
      kbGxsSiVyqfPEwxjSnBpq5aNMb5cTCzAb14Qc/w86WsoI7u8h52vv8jieW63VnD2d0doaY9F
      XyXpBbXErNuI52zbKQ/8aeX2IZCVkxJtfSF5Fe1ELovG8qYSfNP/a2s7pgTL5Hg5SslIz8Zg
      pcTXcYTMnCKQO+FkN6YEl1zOorxRQ8SS0LEawnkVOHv6oHSSkpOYTbPGQFRUGJqWSvJLKhG7
      BBGsHFOCbW1tQSQj0GcWuRmZtGjAS2nDtcu5aG09me/lNO1DIH9/f8LCwnB3dyckJISCggJc
      XFxISEhArVazceNGBALBs+MJNnNvHn8aVENbGzg7j3Wq7rY25M7Oj6wEz5Q06NO8lI6ZSSHH
      2fnWK4fbX5h5IGYl2Mw9MXuCzcxoZspcILMSbGZGM2EWSNt2jf9872Ou5WVQrrFnoZ8j+//w
      W64P2SCtSeLDUxXMtumlXmMzXrfrnvQW8s4//JFmdQ04+E382fE2tSSW9OKrvGWR/LYynZic
      iK+P73028ORpzU/l9JWr1FW24hbgPakHU426gi7BLDRd6imdj/+wTLUfAMY8wf/xH/9BXFwc
      MJYx++ijj8jNzaW7u5vu7u7xQnr+/v7s3buXa9euERISQkpKCr6+U/9dT9gBEj/dS8ib/8Tz
      a2O59OU+7GUDHDmTz9y5biR8fh5r3zmEBjhhkimRaao58vlXDMmU0FowXp/XwVoC2lYqetz4
      6e6XUdpDYUElLq4KCgsqsdQ2UNrUxbXqLlrrCynNUVHSJSTQWYpaK8NOWzuuKMt6Siio66O4
      +DrzQubQ1abGY5aUby5koEpPRTh7DnYGNZ8fPkZZVRfuwV7knjrMpZwqfILmjS03+BjRqLvx
      WbmS8ABvpBo1dQMW2Il7qWs3MqzpoqOmiD6JnJaSEi4XFmAxywuZYRi9vpfTZxJoadHg5mZB
      yz3bOdNZkTVed1gyxffyJ1EneGBggK1btyIWizGZTNjY2DzZOsFGowDRjYtGpNPjcqPW78ub
      N7MoKITtu1+GujzKWgf5ZN+XbHnjh4R56DiZ0sqP3txKe3X1+Laq8y4SHx9PaWsvRQVlgJai
      gjL66vI4W9DNiqggVKoclm19lZKcBOirQ1XWSn1TNyEhfqibmgFwD1nOAlEROY2Qla0CbSs5
      lXpe3bqAhHNX2P/xZ6zc9ibCmqv0DbWjtfLCUdBN+8CTeNQZIPn0aU5fzEKvUVPfrR/357bU
      l2Cwm4e3o56WHgvWx0XSUtWARl2PRuFNREQEW7asQH6fdkpDGT2KRWyI8aez8+mfgXpzjk9m
      ZuZ4mdTR0VGsra35/PPPcXJywtvbm7Nnz9LX14etrS06nY6RkRFEIhFHjx7l3LlzUx7XhGnQ
      Vdu28Lu/vku2NTgufZH7r9cgItjTlk/3fsSCqNVYDhby4ce9KANvOfn9wuPYvXsVMMw39Tkc
      /HyILu2YNhq0YCFSIWBhhdxCjPg2M6tusI2Cqi66hY4EOYJCIUciEXH7o7uVtQKxRIIImKdU
      8NnBgww29LBEq6W2uoQ+dSPKYT3wuO2WClZtWYELgKae5qQEzltrEXmsRWHhyBwvR6AVh1lO
      iCSWWNz2bYgHWzl1Oo3Vq7zu3U5rpO7SKdrKbfFbGAkT6sxPnrfeeguAo0ePEh4eTl5eHvPm
      zaOiogKhUEhzczMODg709vbS1tbG4sWLWb58OVlZWXh7e5OWljYtGsv3LgtUnnmW1KuNdOoV
      /OPf73pkQWimMlOyQN+7DmBmapixHcAshJmB6ckCPY2Y7wBTjNkS+WxhFsLMzGge0AFGyUn4
      ko8PfEmrZhSAqssXOZaYh767lk/3HmNSs0W0rRyM/4IuA4CBi1/EU9qqve/Ha/OymOCfnxmK
      VAkkJIz9N1GZ1La2tsltUNM24XaeZgYHB/n000/vKJMKUFpayuHDhxkcHKSnp4d9+/bx6aef
      Mjg4yKVLl7hyZaw4YFVV1bTENWEHuH7hYwpYwK5NoXzwwSeYGOTr5FJeXBNO0uEThG9/EW2p
      irzaB3QDbSsVhRlklPZDfykFeeWUTXCF132rA0x9DeLHw8KYDSgVtizbsAHPCdY9bZ9sBxhs
      o7Hn2ewALS0tREZG8vbbb2NvP5ZQHx4epqSkhI0bN3Lx4kVqa2uJi4vjzTffRK/XI5PJ6Ozs
      pLm5mdHR0WmJa+Ll0Qv6iPvHACxF4Dr8BTl5KZSWlXHi7FnyL5dgJz3B+jnd1NkH0/vZnynu
      k7AgajWaogu0ag3I3Jfxxpax+q4OITFoinOpbu9mbmQARuDyN0cpqFGjsw5mxyIBe04V4zJn
      Af7oSD/9OUevVvLOv/5vioryWOMr5B/2lzLPshnZ0t0EDmZT2NBHj9GOH8YqiD9fj6OHLz/e
      vn5aTtQjM9KDKi0fjWEEvwXL0daqaOgz4hO8hLbaYlpamhDZeRPlNMy5im6sNJ3M27Cdrrxz
      dGlFWDp631ijFWqKVJQ19zMqtGFj3ALSzySjtwBL+/nYGdsJioqiOu8K3osinppSqV1dXVy5
      coX6+nrWrVuHUCikv7+fuXPnYm9vj1QqpbOzk8uXLxMQEEB0dDQlJSVYWVnR0tKCWq1GJBIx
      Z86cKY1rwjuAjWKUrm4DYGLIQszC25Tg8OAFbN/98o0aACOU9Qj4xU/+jjXzBSSn1SEQWWF1
      +9kXOQOtFA9IWeggGGtTXoEJAfV1NeQnlbHjl7/gb19aA1gQu2UH6/zldAzf2oTb/Bj+bsc6
      2tp7SU5NAgQ4WMsR23sgF2kxaPU8rb+Pw80VXO/RYzKCXt+LxuTEpg3rmedhj7PPAtZv2MRs
      q1FAQvjydTy3IpjB4S5GpYFs3LgR6eitu2zrEGzetJFIF2iqq2HWki1sXB+JxYiJ+XPtuVbZ
      zDBWT83FDxAVFcVPf/pTXFxcKCwsBEAikaDRaLiZh4mLi2P37t1IJBLq6+vZvXs3kZGRCAQC
      fH19qay856rLj8SEHWDFy1u5sOddPvjDfzI7/Dnuv6iGhHn2Jt77YA+J10zMD7BgxDhWGvN2
      wmyNXNcrGHvXyECvBktbe2QiWLR6Hp//4T0+Oj654c6y0BC6hkcRioT0dfcis7KiraqapzUH
      I3P1x54hBAIRIpEMG1En5xIuUNbYM0ErR8T6cs6fP49efGtlDRcrOHvuPDmt4O7hSXPm13yT
      fJlhQOIwF11ZKvZzAqf9mB6GgoIC9u3bR0ZGBp6enhQUFGBvb09NTQ179uxBqVSSlZXF/v37
      KSoqGl8ct7W1FX9/f9LT06dlpTpzGnSKeexpUH0PyUk56E2juAcvZ5a+lsI2WB+z8JE2O1PS
      oOYOMMWYdYBnC7Mlcor5viwoOzg4+OAPfQ8w3wHM3JOZMhfIrASbmdFM2AFaS1XEx8dz6Hgi
      w+b7xHfASEVeKmcvJNOjNQLQVH6Z1LwKDIPtXDybimaS2ym/nMzZC0m0DTzcEKu+vu5hg542
      dDodp06duuO9tLQ0Dh06xPDwWL57cHCQ8+fPA5CQkEBOTg4A169fn5aYJu4AZSrmrN/NKudm
      9n8zPVL095mOq5l02gWzccVCMlLHKj42dulZHh5AyZVSFq1fDuoK1A/oBfqmK7TKw9i4cjGG
      4YcbmzfU14O+i8q6ru96GFNGSkoKTU1N46+bm8dcflu3buXSpUsAXLp0CbVaTXd3N1ZWVnR0
      dNDU1DRtz1aTXhhLKBKSfupTSpvbEM9eQziJnG/3wKAu44W//yeqznwyrv56qJMpEDkSGb1p
      xi6TDlDZL2RpyCwEgFImoroij2slJeiFQuqulnC9X0BMoAKNAipyEylrG8IzIAJJ1zUaunQ4
      es8nar430tn+DOUmktDixqqVUaSmp7EidjmpaemsWD6H4/sykNoYsQ9chvNAOWW9WoZ69MS9
      /PxYIPpu1N0KbAxXKaxoYETiyMZoV06cK8DK3oW4dVHTbhxqa2vDysrqjiJ3CoWCvLw8Kisr
      GR4epq6uDjc3N/R6PXK5nKtXr2JlZUVTUxMtLS2IRCICAgIm2MvD88AOcPGLeFoCAnhrqxMH
      /rMBHC2oq64j3A+iNu0ktPsYxwqzKUmrIyg64Ib6ayB60xtEu87shecUAiP9RrAVgg4jXgHh
      LB4UELpoEQr9KHNXxML1fAaADr2E57dsAdo59EEzth6O6HQ3Vq2VOrDpxZfQ9TWRm1d21358
      Fi5j0SJnsrNzQGrP6g1hSOqzKPnWj/61a0WMCG3BoENr5YizXIRGr0VrZMySOo0cPnwYS0tL
      ysvLx8uk2tjY8Itf/AKDwcCxY8c4dOgQTk5OlJaWEhQUxDvvvENFRQW9vb34+/tTXl7++DvA
      7XWC+/oHcfVzQXpDlU889jFZw+3s+OnPEeQlohtXf6XIZDP74gcIDvbi6xMnkErAzid8wpPt
      ZGHg1OnTuAcsws3DAg0CRKKxFtr2Ki5klyESjOIasAzU1Zw+e46mbh0rmMP1vBSa6iW4L1wJ
      7flcPHMG04iU9T+AgttmD8z1ciOrRoONTATDgwwZBYzqB9GNwnTfAn7xi18Ad3qCFy5cOL40
      +tatW9m+fTsAX375JcHBweh0OtRqNQsXLuTAgQO4ublNeVzfOQ1aePxdeiJ+PT5By8yTopX8
      fFi0aGyoeT2/ANdFYcgfcaszJQ1q1gHM3JMZ2wHMSrAZMHuCzXxHzHOBni3MSrCZGc20KcGm
      4Q6OfrqXi5fvFNCar6bxVUrhA9vXFaeyd+8n5FW1P9R+S1XZk/MpPxaMVBWquJiYQa9uTAlu
      qcxHVVSFYaiDpIuqSSvBlfkZXExMo0PzcIJQY2PDQ0c9HdzPE9zU1ERmZiYADQ0NHDhwgMTE
      REwm05P3BD+KElx8fj9Wi3fQkPg1Hbe9fz6lmIqCJL7tCI7/w/u3LlxDE4dPVvH227uwMvQ/
      1H7LVNn08XT4iDtLc+myDWRtTDDZqjFJv7lnhKUL/SkvqGDh6qXQVkXbg5Tg5gLa5SGsjV3E
      6PDDDbGaGhtB301VQ/d3PYwp4V6eYIPBQFtbG1rt2NUglUrZuXMnAoGA0tLSJ+8Jvh2hyMDJ
      fX++Te1NotTak+YrJez+zd/y5V8/w2a2K5tffwt3KwiIXMEXe/6M1/xFjGt/I830GxxYaldP
      buMINrnvcbZNySJPB/KuFqONP8Ybu1/GTjQLT+sm/rrvOM+/9BL1yfHU+O7Gt2bsb/ben+Dh
      M58anRM/ixbyr+fb8TSomfvC34/HW1SUR+x8V/778xQMg30se303RYc/YNRmNjGbX2e++/Sv
      pVk9IGRJkCMCwNVSQG1VEWXl5eiFQhpKy6keEBA5R4HGGvrzUqnsGMZ9TiiS7jKauvXYe85j
      8TxPpE6+DOencqnVldiYxaiyMomJXooqM4uYpb6cOpyDVGHEbk4UTgOVVPbrGO7Vs2rr5rFA
      9D209cqxMZZy9XoTIxJ71ka4cOZSMTJbZ1atiph2JfhenmCRSER4eDjJyckAODg4cPjwYays
      rIiOjubgwYNP1hMMY0pwSpcXby0TfsvrKyZm8w7WzbOn1yTHxc6CIa0ek2FsrPT1mWy2rAvA
      0FXNobNFALQXpFFUV0VeXQtpGWOlMkNXv8TG5zYRHrJg7OIHwJLXfvl/+NsXIvnTH/9yV0wW
      jt689sOf4DzcTD8QELWJf3jnBcoyS+74XH1+EnV9RqwcHBHowcXFjqEhLaMmw6Ocs0kjx8jA
      2MgHLSY87lEn+GYdxq4RCZs3bGChn5hrxWqMJhN6/Q2Hs9SedVu2siLUjYKiu32x3vMj2bDl
      B4gHGsHCjtg169i8ZDaN3/rRLyu9xojBCFo9WisHnKxFCEa03BidTSv38gR/G6lUyuuvv87s
      2bNpb29/LJ7gh1CC9cwPsLhN7b2N/l6GpFaMqOtR9+vxUFgwWyEgu7QD8fAgltZjn1flNPG/
      /v1/M9eqj3/7j32YAsFKNuY09nUw8NEHx9j9k5exHWzgw/iTCCwNeM8NQ27fy8XDH+ArrMXf
      F4Zbyvlozx8ZnBWIDYMUJh7j91nDRO74KW3Hbp1cr9DlWKR9BQI3RMJ+BoekWI6oqVT3E+ox
      /Sm+wHkenD1zGgsx2HiFTniyHS0MnE9IQDlnIUq3G0qwcOy86TprSbxcgUhgwHlOJLTWknDx
      G1p6dMTgS3WhiuYGCcr5MdBRRMqFCxhHpKzeBFdvrVCPn4eSy/Ua5JYi0A7dUIKH0BuY9nRI
      QUEBhYWFDA0NsX37dgoKCggODubo0aNUVlbS29uLjY0N9fX1aLXacSW4tbWVkJAQjhw5gqur
      65TH9UymQf/w/rv88ue/BqC38DhHeyLY/ZRI0o8/DdpGcTEsWDBWHbK6uBjnBQseWQmeKWnQ
      Z7IDPM2YdYBnC7MneIoxe4KfLcx3ADP3ZKbMBTIrwWZmNJNSgg98eZGhu1JlvWSrSsdfPcyK
      znmJx4iPj+ezE0mTVpizslWT++BThdkTfBONRsPevXuJj4+/QwlubGwkPT0dgJ6eHuLj49m7
      dy8ajebp8QTHeXSy9/y3nUh9ZKtuvfftFZ3///bOPCrK817AzzBsw77JagTBCC4QEEUWE60k
      RklQb6JpTtTGYjJJNO25tbdtmt57mvbc3vY0bWqTagwGQtwiVUuigiirKCoqm2ER2QWFybDM
      wDAry/1jcABxoYkLhHnO4Q++/fuY95uX9/c+v9/dKCxt5iWxmLmCQk6WdY9pn4nYAIxO8BDX
      r18nMjISsVg8IhLc0tJiEOJramqIiYnhtddeQ6vVjh8nuFenw1QoJCc+CV/xRurik/AV/4D2
      hlIS/1GJwmUpgWjI/XIvh6uusundX3B+bxLyXjUOc1dhevEwEk8XwqLWMn+6Ayib2R2/k54O
      S368wnZEluiVXnUkVVhjef0SkeL/5XraNjqEHjTKoL08jY/HexboYRid4CHa2tooKCigvr6e
      FStWGCLBYWFhBiH+5jYBAQE8+eSTD8UJvuf/ACc+/wO//lcbrz07c9Q6Z58niHv7HTTX8wEL
      lqxez8al7hQVFJB9WYLAwh4bc/0cjqUvvqb/8ANYTeVH4jdYE2JOVknTiCzRAHOjnuPlZ2bx
      jayGVkUAm9+Iw9sBRBMgC/RwbjrBMMwJnj+fxRERBAYG8WzsYsN4/U0neN5MIaXF1+kfGBjl
      BEfPn8qlOzjBsS+uxbT72qATHMN/RLpx60u/rKx0MBI85AQLBp3gB01UVBRbt27F09OToqKi
      226zYsUKtmzZgrm5OQ0NDWzZsoXIyEgEAoHBCb7f3PMb4NlXf4Nb7R7iD50jykXL/h2fYVIv
      wReQN5Xy8QeVuMxaiaAtm5wD8chbenjjnTCun86md0CfTQJEiETDcnUrm9kdvwvljessibOi
      UKbA5nEfRB2qW87uga3gEJ98pqW1G2SDWaCbB7NAj/cSqEYneIhLly5RVFRET08P69evp7Cw
      kMDAQPbt20dVVRWdnZ14eHhQUVGBUqkkLi5ufDvBRsYLRif4u2BsAEZuy6RtAMZIsBEwOsFG
      viXGuUATC2Mk2Mik5q4NoFfRysHdCRw4dgbNA/2eUJO6J574XQlcrB7tALdW5HOvSqz/LgZ3
      WN3Knvh44uPjiY8fY93jMWN0goej1WpJS0sbsSw/P5/k5GRUKhVKpZLk6rBlNgAADm9JREFU
      5GTS09Pp7+9/9E5wanwSM1f9iGdmOyHXDF8jIyer8D5ehppqKbwe9zIZ+xJHfShaK/NpkN/H
      0zHkDmPpzgaxGIVShthgpOmpyM/5TgW7jU7wSE6fPm3ICA1D/2/GxMSQk5NDY2MjMTExODk5
      8fXXXz96JzgwYia7/7GdyGXPs2yqlI/+sBMzF3eW/3AZpYUN+Fk1sO9CGx4+s4idoTBEadeH
      2/P3fflYoCL61a1k7v4tni6PMy88kMPHLuDq4cOGjasYZeX2D0ZkZCUkZkFcNCRmwTwABkg/
      sJNr8l76HeYSbnqRVIkn4WHzaMg5PML1bS47zfGzFTTLTHlXHMpv/5jBTA8lmukvsFB4kcz6
      XqRVrcy/zT3LSg7z+1QJEeFhmBSWMj/Kl//Z/CnTfQdoNJ2BXcdlZr7038TOdbrnwzU6wUNI
      pVJEItGo7NAlJSXU1NSgVquJiYlBJpMhlUpZvHixwQ9+ZE6wb8QL/Padt+jO+5SMvHMI5r/M
      m2+8js/ga9JmylQsBnrQqnVYDovSluYXsOz1n/OLdVFknr8KOPDia2L8vabgYDGAWqum75Yu
      VXttIb946w1mrd50hzHsNk5lXwaBBdY2+j9X8NIXiZ7vP8r1bbxyBUUftDY2oAJc/eYTt3EV
      KkkbmTUyfvkTMeH+d07b7h28lLXRQ83D2SeYuLXRWD8WzKYXomiRjm3+ktEJHiI5OZnKykrO
      nTtHcbHeB7e1tWXLli1s2LABFxcXpFIpxcXFrFixAhsbm0dfJ/jMV0ns2JVIldoZ/3kRDFw6
      wM5PdtEw2FGWybqxElnRWFfLN8Nq9XpHLeTkrr/y/r58ng6fCSIRIgHIZTLMrUR0NtbRpeki
      M+O84VzOfqG8/9HfqDsST63SmsaCFA4czRuWPsWF4EBXVL0DBldW7xPLB13fTq626FOodMnl
      mIhssBONfq+Fu5rz/scJlNxlcpjI6s4VkW9SmJVGq1pNatqd068EzHqM3GNHOZF2lH77qWNy
      gktrdXh6WcAtTnDa8XRyzxZjZe+EdX836SczqGrS30NtST7Hjx3DbIofaNrJPXGCE6UKfG8Z
      xPF7zBNVLwhNhznBmkEn+AHz9ttvs2nTJiIiIggJCaG4uJje3l4OHDjA9u3bCQ4OJiMjg7q6
      Oj7//HNaWlq+33WC20qOc3YghJUh368CGkYneGJhjAPcZ4xxgImF0Qm+zxid4ImF8RvAyG2Z
      LHOBjJFgI5OaRxoJ7u1qYm/Cp+R93TR8KQXpB0nYfZBWxYMJfjw8jE7wTcbiBOt0OjIyMgzr
      H7kTfGsk+INtf76vJz+TvJfpy9dxIf2QwfCqPpFAMUGsiwlmx45Evl27U5OTc3eH+M/bPtBv
      2VpBfkXrtzrLvTA6wUOMxQluaGjAzs6Ozs7Oh1YnWPjee++9d6eV5nxDcnImpp6zcO2pZH9K
      Ot/o7JhGLdsSUjmbm4Xr3EgS//Q2VdUduHlY88X+Q6QfPYrHvDC++vD/KKi4QurpCubYyUk8
      eJyczNNMD43AzgwcbFQk7U5n2twQQv19AMg+lM2TG1YxxcaZK5nHeSzYjt+9m0BDlw5b6QU+
      OXyKMykp2IZFciH5M7JPpnLN8nEq937IuZYmvvj0KKHPzuNkSi4+9mr2HzzAX3ZlszTEmT3J
      X5J6JAtXT0tS/nUMaZcZ3tatnGlzQ1STSkLqGXKzLjJ3thm/+90erpVncl7izIIAt2/1cEtq
      mol8wh8TUxGKG82o1FIKLpai0Gq5UnKZFqkKdzsBClsP2kqyOFNUjlJgR9vV81wqraRDa85U
      VweEliIqzmZT842aWbNncDY/Dx9vb07lncbH24LDn6VTW1eGdMARTd1F8ssqKb5YjmdAANLm
      RrxdTSlrNsVSWc+Z85eobOjAz62PQ1/mUn9Dho/fVG7J9nrfp0NXVVVx6tQpOjo6mDFjBgKB
      ABMTE7y8vKivr8fX1xdnZ2dD8M/FxYXjx4+j0+mwsLCgvr4eExOTEZHk+8GYI8FV1vMJDJqD
      eE00RdlVvLT1p7z5vD+5pc30WbjxI/EGTDuqkXZp6ZPX09xwlU77J3nz9Zex71dTlJ2DvN8E
      J2drbgY4UzK+JjbChZ7mCg7m6X1gO9te2jv6gAGUFqbYAw7ewYjXRpNb2MJbP99C+ONToFtC
      +bUOhKiobfgGsObpNesId7c2dCvcZy/EgQHe/f1/IW+8QoeiD1VrIxq3UOYEBSLe8ByWg9tm
      V3Wy9aebed5fQWnzyOjxt8XoBA8xFid4OObm5o/eCT7zVRKlLSrkamcWOFtQ3ydjx6Fs1i71
      J/6DDxH2Knhh82qOlYowBXQKOcoBC9ztbcDeF7MbB0nce412DQQ/vYC8lHIEXs6GVudo2Utx
      gxJNTzfWFnpnePGalfxl55+5aA2uobGI6EUk0s8aCnvcju1//xjhtVZWPKuhq0eLn7vDHWdw
      VqbuJO2qBllGNmEucrQmIhzs9FFeP3MlH+1JY22gftul/o588OEOehU2bF4CxQXf8clidIKH
      MxYn2NfX15AhYu3atXh5eU1kJ1hN6t49NMm7sPV7hnXLg77zERuKszlx4SrtMjPe/uUm7AT3
      3uf7j9EJ/i4Y4wBGbsukbQDGSLARMDrBRr4lxrlAEwtjJNjIpOauDSDr0E1XNp6KW9zAwnPn
      h+bqq1s5V1j/gC5x4qKQ1JCenk56+ljd3+8393KCZTIZe/fupbRUX1TxkTvB0WvEOMuUPCsW
      M9vdcsS60Q2g4YFc4ESmR6IkZPlyli+PGvOojGLQEb58+fIDvbZHwb2c4Ly8PNasWYNEIqG+
      vv7RO8Ej6OvgnwkHaZHeYM5LW0HTzpd7E6m6quA3W58CoLEgnSMl1+jp7Ee8JYaEbSNrB08+
      ujmTno61uTNL51hwUeFLlJuE/DobbDSVtLcpmbEwkOK0Iiyd+rCdFolfv4QOR3OKi4u5caOb
      RSG2lN5uv9BQmr4uQ9Gnwy/oKWa4j+8HPBYnePr06ezbtw+NRsOUKVMoLy9/4E7wmBuArv0G
      VdIu7Pvk1DXLwMKZ1evjuLjjfWoHi7nn55xC4zgdJydrtCb62sFthtrBk3HQ3pZFy6NwA5CM
      fKP3DYh4cvkSzAQSZEHhBAVZc/myBABzx2mEhIQQFBR0x/16G8+T3anF3UaAVquG0SkGxhXJ
      ycmIRCKqqqrw8fEhJCTE4AT39/eTkpLCsmXLAH23yM3NDbFYTHV1NXK53OAEP/RC2Tfp1ylQ
      KAdwdLQHwNJEzoH4jznT44K/nX6b8EXBdLWrEJgIh2oHd+prB096rB1pKc4mI68QLWBqKcLs
      Lu8EoVLC8fR8FHfYT+QxA0eUCARChMLx/3IZixNcXl5OYmIidXV1eHh4fL+d4O8rxmHQiYVx
      GNTIpMboBN9njE7wxMLYBTJyWybLXCBjF8jIpOb+RIJvx0ONDqs5f24oWa+itYrdCZ+SWVj7
      kM5/ewpPHeXoUf1PQ/udR8JaW1rGdkBFy12PM97RaDQcOXJkxLKCggISExNpa2tDq9XyxRdf
      GDzgR+4EjzkSfDseanR4WAPQSflwewox637ME972D+RssvpCCseQrz10cSxedg78IDYWH+c7
      Gyf/TgNo7Ji4DSA3N5fm5mbD7zKZjJaWFl555RWysrLIzMxkyZIlNDU1UVtbO37qBAMMdDey
      M+kIveoe5q4S6xdqpXz2yQHUfT1MXbSBloydmD82ndo6Db/6aQSt1RdI3JZHv/8Pmas+TX5L
      PyqVGVs3zeP3wzI2L3asI7eiFblKxPplLnw+ohZwHxn/TKCuRYr1nJfwqkuhwnoa1y+VI/7j
      r8ne/ld6bZ1p1ehvpa/pMgOzo3GxFIKlCxUZ+zhSKadXAZt/9Rx/+8noTM+VKX9i2rTHKK1R
      EOA1QJvVU8xT1wyribyave/8EZ+ZHjRoprM+QEKDox+h/86T1nWQm3URRZ+WmSHRqGpzaZD1
      4RcURWttCceuX8PUyY9Frkq+rGjHqltKYOwG2gq+QqoWYjnFl2XT9YeqKTpFWZOcXhN7Vj4X
      Qk7KSTTmIHIOxqG/lcBFi6guKMA3bCHW4yREIJFIsLKyGhUJVqlUJCUlsWDBAiQSCR4eHoSE
      hCCXy8dHneCbtFXmc1miwcLeCfNe/VtI11hEXoMcoZUTVgKtITr8AzcVtV3g/ngYcRtX0dXU
      QsENJT/f/AZRtjKuykc6t9k5OfSbCHC2tsL01lrAunauVElB0EdDXTNgStRzL/PMLEdkkqvI
      bBchFr+Cu4X+OoW2dmjbpIbrvtX1vW2mZ1t3Xn51A26Ozrz65jqErZJR92/t6se6uI1Yq0av
      GwuqpgqudmgY6AeNtgMFbqyKjWWutxPufsE8H7saNysdYMbC6BheeDqQbpWUXos5rFy5Eove
      oVQiN3pg9aqVRHrCtbpqXCJfZGXsIix0AwTPcuZyZTNKrMfNhx9g//79lJWVkZ+fT2Gh/tu6
      s7MTFxcXNm7cSE1NDTqdjr6+Prq6unBycnooTvCYG4BLQDiu/V0MIEA4uJeZdzD+Fir6ESAU
      moDqBvt27SR/WHT4Jgs9rfjrjk/I73Zg5i09k6cWzKVdrsPEVGioBSwZrAVMvw6ZQom9o+Oo
      zAXY+WLekk3CnhTabxbwmDKfCPsrbNsRz4ETBQbX91iVDU9MHfuDcRysiXyh+s4pU/QZoiEr
      LfXu3UFA5OmPIz0IBEJMhSLsTKR8dfQoZY13K1wxBVNNOUeOHEFj6mhY6mkNX351hLM3YJr3
      dJrz/knaybOoADPnANRlmTgFzB77zT4Efvazn/HWW28RFRVFaGgohYWFWFlZUV1dTVJSEubm
      5syaNYuPPvqIc+fOMXXqVEOd4JkzZ5KTkzP+I8HxH2zjpa3/OaLKipEHjLaDkyfy0Qzo8A6K
      ZoqmhsJWAc8vnvedDjtZhkH/H9va3UKNUN//AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Assignment 3' width='192'>
      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
      b3Dc+bnBvlwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAVlUlEQVR4nO3d6W8bCZrf8W8dvC9Roqj79CXr8N2enpnu3lksdhcZYJEECPIieRnsm/wJ
      eTVA/oh9kQNJ3mySV0mw2Wwyycz0dNvtoy3bkmXdl3VToiQeIllFVlVeqH3NzNrupnnY9XwA
      ASRLIp8q1a/ueqg4juMghEupjS5AiEaSAAhXkwAIV5MACFeTAIgGsFmausf//dWX7GdLf+9v
      bexlqdS4EgmAaACLx09mGTnbw9/+3a/J5rJkMscYxRN2dlOYFZtiPsMvb8+TM0qYFYvCSQGr
      YrC7s0t64wH/5j/9kpNSuepK9PcwNkJ8b2b+kEdTM4RiSf76P/wVEz/+OamlSSLxGFmtG3Nn
      mgOzj9Xp+wQ6RlmdvINHzUJskA7/Eam9A3JFk5DfU1UdsgYQDeENtXDtR3/EP/yTH+GLd/Pj
      62OULYfBvi6KuRNMPCTaWlEci4P9XY6yRXIFk4HBQYbOniXZliAa9FZdhyInwkT92exu79De
      2YOmwsbWJn09vZykt5la2mH88iXyO8usph2ujHTw9OkKbV099CYCPHg4x5nxS6RXZogNjNIV
      D1VViQRAuFpDNoEcx8G27UZ8tBCvqTIADmWzRKFYwnYcrLJJsWTgAJWySalk4jhQNg1KZpnn
      6xrHcZAVj2gGVR4FsllbmCN9fEy0b5STjSeUTIvhq5+yMfMI07K5MDHO/KNpyo7Kzc9/gl85
      nfFt28ayrPcwCkL8cFUGQCOZaGFzP0tf2IHWYW6cDzB5b414/zn6QgpbmzO0jnzKoLXCXt7m
      TKsX27ZRVRVN097PWAjxA1UXALuCt6Wbm2MOc6k8qlGgcGTgiUconBQpqDZ6ME4me0zGLhNs
      Vd5T2UK8H1XvA6zPTzG5uEtfdxeJMDxaKTJyvp9WJcfSXoHuwVGi5gZbFT/JgJx3E82lIYdB
      bdvGcRzZBBINJ2eChatJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISr
      SQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtV1ainYpwwMz2N
      oce4PNrN3S8n0ROdfHKxh8eTU0R6zjOU0Ph2cpaus2MMdsWR1liimVTVF6hsFDFtld21WWIR
      PyllkNEePzvL09itZzlanqXiUzhzdoTluUUmrlxCU6QvkGgeVa0BdI+H7dUlvPEBokGDJw/v
      srkUYLQ7SDDgx/Rp7CsaAZ8fr+5g2w62ffq1Z9IcVzSDqgKQ2Vnh6coOiUQZXzJKMBCgUnQI
      RoI8uXcLxRfhbFLlm29u4Q21o6sKiuaR5riiaVS1CWRbFQzDxFFU/D4vpmGgerx4NBXTMNA8
      XjQVDMPE4/Wiqaf73LIJJJqF9AYVriaHQYWrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCE
      q0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJ
      AISrSQCEq1XVGa6US/Pw0ROKeLg2OsT9yacE4l1cHW7h/sNZvK09jHZ6+PbpGvHuM1wbGUSR
      7riiiVTVGMtxHBzLYGF+GYwKnZcvszH9mFhIJdQ7xvHiFGlF4+roGAsz05wfv4TqnDbFet4e
      UYhGqmoN4JQLzC5tMnDmHMfLc1QsGxtQFbBsB8sGRXOwHRvHUVAA5btVgKIoEgDRcFUFIJve
      Y2d7k3Qmx5WLA0x+/RvCyQESySjf3v8twY4hRts1bn/1FcmBETRVQUF5sfSXAIhGk96gwtVk
      ESxcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIg
      XE0CIFxNAiBc7Y13hJVyR2zuHnB6x4xCe1cvLWF/XQoToh7eGACzlGdnexsbAJVgvEMCID4q
      b9wEirb3cfP6RRbu3WF2doZUvlKvuoSoi7fuA5iFHD5vlERPO5lUph41CVE3b70p3rbKZDNH
      rK5tMTwyTizoqfpD5aZ40Sze2halYmS48+Ut9vefkfF08bOJznrUJURdvPNhUM0fwDHNWtYi
      RN29dQ3gOCpjN78gEXU4yGm/O5B87hg9EMOnW+xt7WF7A3QlWkjvp/BH2wj5VFJ7+0Ra2wn6
      qurDJcR795Y50mTm/i2mN+HCYIhQ1wR9rwwtF7Nsrj9Fbb3GcHiHhc0S/X0eDndW2EiXKT9L
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      AIKuiQAIuvYfrnJ8yoLohYgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dZ5Qc533n+291dc55uifnAGCAQc6JJAACTCBNUpRIUaQtkaJt2etde/eu
      j+0jy7r2vfZq73plra1kSZYVKErMlEiAyHGQJg8m59CTp3s6h6r7AhAJigCIMSjSVtfnHJyD
      M9NdVdNdv67nqX6e5y/IsiyjUGQp1cd9AArFx0kJgCKrKQFQZDUlAIqspgRAkdWUACiymhIA
      RVZTAqDIakoAFFlNCYAiqykBUGQ1JQCKrKYEQJHVlAAospoSAEVWUwKgyGpKABRZTQmAIqsp
      AVBkNSUAiqymBECR1ZQAKLKaEgBFVlMCoMhqSgAUWU0JgCKrKQFQZDUlAIqspgRAkdWUACiy
      mhIARVZTAqDIakoAFFlNCYAiq6mv98NMJsPY2NhHfSwKxUdOuF6NMFmWicViH8fxKBQfqesG
      QKHIFkofQJHVlAAospoSAEVWUwKgyGrXvQ16I+Hxdl59/kec6ZrBWryGTzz5OMt9ul/XsSk+
      IpHpfk4dOULnaAhjTgWbd26nIseMKNzoGTFaT7bjXVOLV6+9tZ3IErHZYepPHKd5cBadu4TN
      27axJN+GSrjhjm5JIrKAYLCgVYGUThCOpTAaTQiZFElZRq/TcaM9LCIAIY796DuMeB/ki59f
      jyY6QUJQbiD9x5eg+2w96mX7eOYhDwu9FzjV2IBr6yY8JvEGz5FJJ5NIi9iLlI7R2dqInL+N
      Z+/LIzLcwIFzLRT4N2NT314AhhpOINTto9wMmViQ/uE5SkvLSY0MMSRJLKms5EYxvfUABC9z
      9rKRe59cj0svgj4XgHD/Mb72rZ8zo3Kz89En2FtrpP75n9MnJOlrbCfuXsdzv3s/ttnL/Oz5
      n9E8lqJy6wM8fFc5ja8eo/z+h/AL45x44yJV99zL9MGvcGjESHRkEE3JeqoMQ5xvGqf6vs/z
      yW2FBFvf5KvfP0TMVMZDT32KOv0UL5zuYVVOgqOtMfY+8klK7Lf1emaX9DgjqVJ2VvnQqUBb
      Uok30EY4FIH5UUJh6G5txLryftY6pzly4Ag9s1GiSS+PbVhNOjzBxRNHaRiOUbpyC1tWlhKd
      6GQ+DL2tDZhX3s/mUjPpRJJEykR1bSE6UUBXWMuS1gOMxKLMDg8hugoozNEz2tRBvKAQX2aG
      U0eO0TubxFe1nh2bVmBITdJa38DoVIBATM+qbduwDp/l1RNNcGkAW/kmntrkAUEgFR/gwEsv
      0S/LnHH7WLV6HaLOyPKKArRiir76Vkyr6xYRgGiIqJCD0/Hup4I018TXvnqU1b/3J6yUmvj7
      v/867r/+XQJdbUytepjf+5MN/OzL3+X84Ga8F08zbV/Lcw8uQVAZ0RJnuLOHnDR4hQjDPX3k
      pWFqoI100R/zhcej/MMf/Bj1f/uv/NcVh/nTbxxlU3EZ3/xhK3ftfxS59zhf/86b/L9PlXL5
      7MuM5N/Pp5+6G5/x13GW/AaLBglpLRiv9gYFtQatDMlUiuhcNydbdKzbsYcKd5jTb7fiWrOP
      LT6RxuPtiHKUrvZ2woYStm3W0NvZRb/fgWW2h1NNGtbu2ENlrgmATCZKIq5Fp736aa/SYdYm
      mE6kSc3MoDbkAFrC0zOEPT5yLRbKatdRIEsMjYwwPFRAqWuByZkkS3Y+yMboKB2DY1Ruvpd7
      ZA3C8l2UWtVIs71Mz85TULyGO+69l8FMhuqKCgxijMYDFxn051CSHuRyUscelbCITrDVhVUa
      ZmIy/c6P0lNj9Hqq2VLmxlWxkjr3CIOjAFpycvOwO6xYtGpkdBSvqMEc6eSNl97gdMsg8Uzm
      ursRRBG724vNZsKkMeP1ebHleLCkMsxOjjE5P8blSxfoChrZUFOADGCs4J6Ht5Fn1iMq3frF
      MblwxGYIXn075FSCuCCj02qQRQs1q9ZQledEjIYht5SKPA9GowGjVo2QSjA7OcLQ6BCdXQOk
      BR0avRpZNFO9ag1V+S7UVzsSarURnT5GNHa14SRFmU1YcZuv0/yRJRamh+ju7KKzq4vRkRnm
      onEklRZPfhkFOTbMZg9Wk4xKo0WjEdHo9Og0736eC4ioNRo0Wi06nQ612k5tnYnOlhEGR0P4
      cx2IwmICYKpmy4o0b75+jMlomrmJPiYkC/njHZwfixAbaadpIoc8/3WeK2XAmsfu/Z9k1/pi
      2i8dZ3Q2RiIZJBpJMNXbzsjCBx+C1eXBIphYtf9pPv/s09y7tvjKH2AyYVXfqL2quCkxh0Lz
      ICcaBomlM4x3tDARVmGxGVBptBgNelQCoNMRGx9hMhQlHQsxHYwiiRqMJht5lWu474H72b25
      FrtRjajRYDAY3tOJVuv0GHVxWi52E0snmei6QDcOfGoRQUqTSGdIhqYZGBknlpIIhYI4K7ew
      d/d2ynNMNz1Rk4kgCwsp0u/7UI0zNxcmnc6QyUjofMtwB07QMJXAaXOBAOIXv/jFL97aK6Wh
      sHYl6r63+PZ3fkTDiEDVprvZUyfzw7//Gq/UT7Llt5/lziI9M0OTGMpqKHaqmBqYxFKzBP34
      RX70vX/lUNMY1Zv2snl5DUyf40c/eZOAvpAKt4WiJTXI0z0I/jVUeiVGu4IUrFuBWzVP/7DA
      8rt3sMkT4Qdf/wYvv3mKgLaAtWVWxudTLKmswKxf1E0tBQAijrx8FtoP88YvjjJGLtvv2IzH
      oCIZWwCdG4dZjaCx4DOEOPz6q5xuH0c0uSmrKqXIa2G44QivHTxJz4xMYXEBejkGWhcOi+ad
      vQiCGq/fT2ywnlfeOETzSIrS6iqK/R4c+hjnjvyCk+3TmG1e8isKyTOraTn2KscaRzHnF5Pn
      8mC3iiTiAk6vHVIp4uk0NrcbbWqO4z9/nfMzBlYV21hICnjcHiwmmfGWs7x5vBG1r4pcuxFV
      ZpJAKIcVy3xoBEEZC6T4eGSi03QMLFBSWYRR/VG0WyP0nrtI22SMqnXbqfLqAWUwnCJrpAhO
      TBFRmfG6rfzyzqsSAEVWU+6ZKLKaEgBFVlMCoMhqyn3DLCLLMslk8uM+jH9XlABkmcwNvoHP
      VkoTSJHVlAAospoSAEVWUwKgyGpKABRZTbkLpAA5xWDzSQ5civDIp/dhv43BabIsExq/zKkT
      5xiaS2DylrJxyyZ8plFaW0xs2JB3zaPTzE/OoXN5MNzyaPYUwYkFtB47BtXijzM63c/Zk6fo
      GQ9j9FcqAVCAlAgzlzGwJidEx0yGDTm30TCQZQL9nThXP8SeUhPh6UniGhkZmfcPO0sxOx7A
      ZltcAOZGJzE7bRgWfZhJ+hqb0dXs4qn7PKRjQSUACkhE46QTAiVrCjjdEUDyFpAarudiupaN
      pUbSiSk6W4KUrcxl4OQBTrQHUFuM1G55lLXF+vduTAC1RmC0p5Ni7zK8bh9WQSAazjDTf4mX
      et9iWrKxYddelvklwjMJ7DoIdZ7hUNcYM6NT6AvX8OCe1ZjmOniraZiJ3j7ipkLuvudOCuwp
      5iMJbDLM93fTNdVDT8swC5pc7ti3g3KHyFBrPcfOdZISLZSt28qmmgK0IiBNMh7LZ1NFDloV
      aM0OpQ+ggIVgPwl9MQ5vJZ7ZFkYTMmp/EZnuFkJpmUhvM/MuP8Hm0/SbannymWd4YImV2fj7
      14UQBBUlK/ewxh/lyIs/4mdv1zMeSiDLEmhdbH7gCR7eVU2wb5gEGYKTcySB9MI05urdPP25
      p9nqGeZY8zwkFgjrynj0t5/hsS0Ozp7tIk2a4HSQpCyTjMwxHXdy75NPs3+Fg8BcmJnRbrpm
      9Nz3xO+wf9syhPgc73z1Fw0S0prec+VQApD1Moy1NNDcdpo3XjtC58www2MRVKIbryPI2OQk
      naM6qvJVzMTsrKjyoxdViGoVN1rOR6UxULRiO4898TirPAJjY+OkRQ2uvCK8Fh0agw3j+9Yp
      MeB0WxBFHf7KMoRQCACby41ercJaUIo3GeW9a5YbKagoxKLRYDKZ0KgFYsjk+cuwG9SIovq9
      c8RNXlzxKeav+TJcCUCWk5MjjITL2bl9DXV1daxaUU1qfJQEIk5vPgvtZwn6ynFptNh187T3
      ThCOBJmeXUCSZJAlkskU0tX2vSxLjHZcpG9inmgiTjweI5m+ldMsQywSJhqe5vK5Lkx5bgAS
      sQjR6ALDzY3MOTyYbroNAb0sMDE5wExogbnZGWKpa3/tpMA7z9mzHcyFw0wFhpQ+QLaTgxE8
      GzZRXWABwGc30Dc2TTIFDpeb7u4JSvIsqBDJqall4PAxftYiYZKCWHMFSM5wsX6MpZtrsYoC
      IKDTCTQef4PjERl/9Wo2VhegzYzhdF7pL6g1BuwOFSIaXAVe9IBEjIaDL9EriviXbubOchOM
      wljrEV5ozmDMW8rurYWIxHDnutGpBASrFav+yjZFkw2nqMdpKcA1dJpfvNyBqDLgrHResyqc
      SPGqHcTPH+ONn9Zjzq9RZoRlk9stfBIcauJUQw/RNKhUJup23kGp/RaXRvwAsxfepr/sLlY7
      rvnh6DneDlVxV43tFrciE5kZ5GL9JSajEoLaQkXdapYWuW+4zKMSgCxyuwHIJCMEQxFSkoBG
      Z8JmNSDe5rqe72w7HiGlMaG/9nZoKkZE0mLS3eo9UplMKkl4IUQiLSNqDVgsJjSi6oZrgyoB
      yCJK6av3UzrBiqymBECR1ZQAKLLadW+DptNpBgYGPuJDUXwUlCmR73XDOsHKC6XIBspdIEVW
      U/oAiqymBECR1ZQAKLLaogbDybKMlEmTyUigElGrxdsucan4+MmyjCRlkCQZQVAhiiqEm76v
      8tXHCh/wuPfvR5YyZK7uR3V1Px/nGbSoAMz1neX5H71Ex1QCW14tDz7xBCtz9R/8xA9RfKqH
      noSXZfnWj3S/v8lCY20cPXaW0dk4Olsuq7ZsZ1mRC80N2wcxmo824du0Gt8i6gQvjHdz+uQZ
      eqfCqC05rNiwjXUV3kWF6Hois5Ng9WJSQyYRZioYx+F0okrEiMoyFrP5hk2dRQRgliPPv0B6
      2Wf40t5lqBOzJIWPvgU1e/F5/nHyPr725PKPfN+/mWJ0n2/DveFB9hY5iA41cbK7nVzPRnLM
      H95oeSkVpae7A3PNHp75LQ+xiXYOnO6gqsSNQ3N79d3G2i+8UydYziRZiESw2p1Exsc/xDrB
      s5e52Ofi4d+rxaZTgc6DSU4z1fQq/+s7BwiqnGx+8Eke2eLkxDdfYKaymtkLzZTvu4u5177J
      ZdnPzPAgBdue4HceWoc+2MY//X/fpisoULbpQT776FbmTn2blybLqJi/yGzpXnY6u/infznC
      bFKmcuvj3Fs1y/d+epLL0x08176eZ//gcTyz5/nxD39Bf0zHlv2fY//WUvQqpVl2y5JjjAqV
      3F3iQiuAprAUz3ALkVCYwHQfk7MyvZdbcK9/iNWWMQ6+dZS+uTjxTC6f3rCKxPwI9UcP0TAU
      p3jlFu5YX010rImJWei73IRj3SNsrzCTSiRIJi1UVvvQiAIafw1LjG8wHI0w2duLmFNCeZ6R
      gfomoiVlFMrTHD1wmJ7ZJN7KdezavhZTOsDFo2cZm5siENGxasdOnKNneflkC5zpxFq5jWe3
      uJgNLmC39fLW8z+hDzjqzGHt+g3Igo41teXoVXHaTzTh2LxuEQFIREkIdsymdz/1pekG/uG7
      Ldz/3/+WFVIz/+PL36J+yX8mNNFP/YTMpz77WVb4w3z3u0GqH/9L9ldE+Oe//TIHW1xoXv1n
      TPf9X/zPOnjtK3/F988sZVdwgpb6Uao/9QyfqPMTHoizbe+9CNIkB3/2XYY3/hPPPdzA7NUr
      QCoW4Dtf/QmqmgfYYxzn+GvfpbT0z1hXoPs1nCm/oRIRoqKeX5bvFVQq1DKkMhni86M0d5nZ
      vPsRSiwhjh4epOzOT3GfT+Di4WZEOUpnSzNzmgI2rdfQ19VBT2EOzuAozV0mNu16lFLvlTlc
      kpQglVSjfqc2kRqdOk00LSFFwqiTGUAmEY4QS2cQLQ4qlq/Fl0wyPDbO0NAsld440YyJjfvv
      wRYepbVnisJdj/GowfrOFSA+0Uk4EkVtqGXfJz7x7hVADtNy8Ay9oULKUwMMaO1UL6pOsN2L
      Qx5gLPDuHLP03DTj3nJW5BjR+ytZ4plmfBJATc0d97HSb0AFiGo1ZrMFtdFHYa6RuZkhRsc8
      rKjzodP7WL7Uy/D4BADO6p3ctcqPVhWn+fhrXOqeJBTJIKozSL/ylZ0kzTAVSCNISVIqN9v3
      3UOBTbmxtShGD85ogNmrX/xLiQRRJPRaLWisVNetoMhtQo5GUfkKKXRbUInilTH2qSShyAJp
      IJaQ8RcV47LpETQWqlbUUex5dwKjWm1Eo48QDl+dSJ8JMxWz4jFdv07wfKCPwbE5orE4mUSG
      WCKJrNLgzCnAa9Oj0VoxLaYoumCmus5BX0MfA+MRcnPsCIuqE2xYwu6dNg7+7GVaeofpbG9g
      BA+185f5RUMvfRdPcmm+kspCAC2ma2Y9S+kUs5OjjHQc41K/jqryWpYsD3H855fo77vE0Qtz
      1FUVAqA3G69elhJMDo3jqVnPyqUF6OQrL5TR6iQ52EnX2AxJOYeCUiNqq4/Va1dTnudEg/LF
      9qKIXsp8Mxw70czo5BSdDReYSxmx2w2o1Gr0Ot2VOsEGE+nAID1Do0yNjzIyHUZS67CbzehM
      LqpraijLdSKKoFKr0f3yeVep9XocFhXNZy8xNhHg8vkTDOg9+DQaNEKG4PwsgaE+OvpHiKUl
      4vEYRk8JlWVFWHUC719/4l2p5DzjwwGmgpH3/Fwlxpkan2BqaoZIIoPGU0t++CwNk0lczkXX
      CRbJqajFFmzh7bePMxIxUblqC1vrjJx85XXOD6bZ/qlPsiFXTywUx1pSQZ5NB0Q5/8oLXBia
      obt3kg2PPsP2Si9FtdWMnXyFI+f78W/7JA9tzEOOhUhbiqnJtwN6HBY4f+w4I2knlYUuimvq
      yC/OJ9V+hOOtsxTW1LCiKp+hSyc4Ud9CUHRSXlaEWatcBW6dCmtOHtJ4C+cuthI2FLNx0yqc
      OoFMOona4MBqVCNoTORY0rScq6djLIzZ5aOopIA8j53gYCv1jR1MJbQUFvgxqCTUegdW0zWV
      21VqXF4fwlw3p883MxoEjy+PwrwcnKYM3S0X6BiL48rJp6AkD59Zz2DbGVoHQ7iLy8h3u7BZ
      tEiSGrvTiiBJSIDV4UAvJGm/cI6eqJmlBXaSaHE5HJhNIqHhbi61DaDLKcVr0SElJ5iJ51Fb
      7UUjfCRjgab43p/+GTm/83XuLvv17knxH4cUDzI0EcWX70N/owm7H6oF2g4fo3lex4ad2ylx
      XGmhfAQBkIgtLKAy2NApa1AoPjYSiWiMtKDBoNe+0zxTRoMqsprSWFZkNSUAiqymBECR1ZRu
      aRaRZZlEIvFxH8a/K0oAsowk3ewrpeyjNIEUWU0JgCKrKQFQZDUlAIqspnSCFfxyWfF4SsZo
      0N3mFEUZWZJIxGOkMjIqtebKyFAypNMCWu3tzf66XbIskUrESKQkVKJGCYCCK3WC205z9GKQ
      Bz5zPy71vz0AsgxzQy2cudjBXCyD1pJD3br1+K1jtDab2Lgx/5pHJwn0j2HKL8aiudU9JJjo
      ncJQnItVXHwDZiHQyZmzzUxHUuidBUoAFCDFw4QyetYWhbk8kWZL3m1UfZElJkf78K6+j72F
      eqLBeVLqG51mMlJGWuQMjqvP+TcNYUvQ39yNa9Uu7iiwI8UjSgAUEItESSW1lKwp4cTFIVK5
      5WSGTnE6vIwdS22kI8M0NcdYstLF5WOHudg3jagVqNz2GbZVGN67MUHAaDLR1nwBq6oSv9uJ
      zaAjFk4z2V3PC91vMpsxsmrHPtaUqBi5PEpJeSnzzYf4ec8s0YlpxJwl3LdvK+5gCy9eGGFh
      dJio1sP2u/dQ40sx1B+grDiXma5WWsa7GemeJISLbffspsYJ3Q2nONM8SErWU7hmGzvrStGJ
      QHqc8XQxOwudaATAaFECoIDwfD9JUzUWu4mc6GFGY2UU5FahO9zCfOVm5N5OMvmbmG+rJ+Rf
      x9O7Cgg3vcr5zPs/hQVBRcGy7agNrTRePMVlk4+6Vatwa0FrK2DrXfchLPTS3hcgUeIjEYmT
      AcRkDF/dPnYUaQi0HeR82yx7fQkE51Ieu3svqYkGDjT0UbY3j3g0TkYGIRkjpSti/1P3Ebt8
      ns5IlNnUJIFkDr/15G7SI+20BsPvziZLxIiJ2isn/1VKALJemqHG85yd7KanQSQcDrNibIGi
      Ugded5xAYJS5gJklSwTGhi1UVXrQqn65qNX1tyio9eRWrcFfvoLhy61MTU9gK1Bj9+biNGkJ
      p8wYNJFfeZYem8OESgRXYT5y05XfW+wOdKIKnS8fx/kB3juQw4CvyIVJrQaDAbUoEEfG6ynE
      ohcJiiIqIf3uw41eXPFmZtLVeK6e+UoAspwc7WecjTzxZC0mYH6sg77AENGSpbi8hVxuOk2s
      Yid2tY60Jcy5pm6kYjuzY7NkimSQkswHE5jtZtSCgCxLDLWcZk6fj9sAgZlZ8OagIvkBR5Ji
      emyE0XCMwaZuPHX3ARMszAQYHQkyN9BEJHcl5ptuQ4VZ0NA12obGWEp8dIyw2vvurwUnpcUp
      Th85x/IqP1IyqgQg28kJFSUblpNjvrKCgz6vnLR2DiSwOd2Y3MUU+MwIqLCXLiHn/CUaG8ZQ
      LSTRlQuQDjPYN0XZygrMwpU6wTaXi6G2Nobi4C5ewopyP2pJjd9/pXOt0Vnw5uhQoyOvqhAT
      kCLFaGcjCY0Kd9lmVufrYBRCgS4uzoDBW8aO5X5UxMkvz8MoCghuN27jlaUhNHYPPpUBi8FP
      bmCSzqZGMkkJQ5H6miuVQO6SzSTaLtLW2IDRW6rMCMsmt1slcr7/AgdPNjGXEDDa8tl+904K
      bv3+5U19WHWCw1O9nDpykqFgCp01j9WbN1GdZ1fqBCtuPwBXFraVkOUrC2iJqg9aRHdx25YF
      8T1LqSBLZGQB8ZZX+pOvLuB8ZQ2pW1mAVwlAFlHqBL+fMhZIkdWUACiymhIARVZT+gBZ5Eol
      GGVK5LWUACiymtIEUmQ1JQCKrKYEQJHVlAAostoiCmTM8JP/50vMFN5FkQ0muw/zf75zAH9l
      LQ7jhzimTpYIjTbz/Lf/kW//6085cmkAXU4RBS4TJCc58J2v8pWfnEDrq8K9cJK/+vP/wYWg
      hcocEwsxCb1Rp6R6kaIzAxz7+Yu8ceAYbQOzmDy52E1abjwCIUbb6WbwuDGpb3GOrywRnxvh
      9IFXeeWtozT1TaF3+PBYbncOMiSjYTKiFlEAKZ0kHI0jqjXIqRTJTAZRFG84FGIR54pENDhH
      /OrwaikVJxRaIP0h31XLxIO8/fKPCXh38Tf/8+/47CYDP/3XN5hMSsT6LvLCoJu//us/ZXet
      ncZfvIjv0S/zJ5/aTqr/FEfqe4l+uIeTBRJ0nTmDsGQvz3zhC9y30snlhgZmY5mbPEcmFU/e
      tGzRr5LSMTpaLpHO3cazv/e7PLwxh5b6ZhauM6lmsQYvHWfo6hufic7ROzhMLCkRHBqiY2CA
      1E2e+yF8dMvMDV7kpedfpSesYcM9T7JnbSEjJ7/HS61xhMlB0u46avzzXLo0QMHGx3ns3qUI
      Qyf56jdeZ17t4a7HPsOd1W4AEtEAQ1Owed9KjDojFRs2U/7y97nQ3cfsz35IX0uGv/nrOap8
      BhqO9jDT9rcws5/9xXqSGh1aYKLtID/86WEmUnb2P/eHVEYv8fzPfsFIwsmO/Y+yY3nee2YF
      ZbX0OCOpMnZW+9GpwF1ahXeijXAwgjA/RigM3W1N2OruZbVzhmMHj9I7GyWccPOJDatJRya5
      dPIYjcMxSuo2s7muhNhkJ/Nhgd62Rix197GxxEQ6kSSRMlJTW4hOLaArWk5N6wFGYlEMw8OI
      7nwKvXpGmzuJ5xfgl2Y5dfQ4/bNJcirXsX3jcvTpKdrONTI2FWAipqdu61Ysw/W8frIRGoew
      l23kyY1uVKJIKj7I26+8Qr8sU+/2s3L1GkStkeXl+WjEFP3n2zCtWrG4AESmh/j2l57jJQMk
      IzOEnOuQ0iHe+MH30W5+jj8si/GDb34DnfmPcA13MqXbx5/8wR08/1d/Q2jVl/jCc5f5yl++
      Qe8KiQP/eIyKux/AM9fIj/7Pz6j+38+SB2QyYSRJj9lkuHLZMhhxiBPMJHO5e++9vK1K8Od/
      9DCiKoh1+CLR+/6cR2p1hM58i5Y+Mw9NneEfvnGCbc/+EU9540RCI7zyxiFMS+7kTqmfN19/
      kWL/Z6nwGj7gr80S0SAhrQXj1baAoNaglSGZShGZ6+ZEi4Y12+6kwhPh7KEWbHW7edynovFE
      B6Ico7u9nbC+iC0bNfR1dTHgc2Ce7eFkk4bV2+6kMu/K65zJREnEdeh0Vz95VDosugTTiTTJ
      mWnUBi+gJTw1TdidQ67FTMnSNeTLEsOjowwNFVDqChGYilG59T7WRsfoGhqlfNPd7MkICLW7
      KLFqyMz3MTUzT37harbdfTdFmQzVFRUYxTiNb19i0O+lODVEe1zLHkFYXABM7kJ+53P/yO5S
      CLT/nK/9uB0pM0Fw3smWZVXkWMIsKbIyMjmLXRSxery4nXbMBg3unHxc+XPYM0nigTE6pgNI
      jecYBmqXVb5zIKLajihGmQ+FkXOsEF5gMu1nTb4G3bgOUQMWswlIolOLZEwWjHpYuPq6Jkf7
      mSjZyrYlXnSAEL3AcF8H6ZiZOaOKvNIaLDrl4/8dJif22CAhCWwqkFNJ4oKMS6tBVpmpWVVL
      TYEbYa4XObeUqoIczLoYZp0GIRVnemKIgTkdc9NqwIpKJyKrzFStqqWm0P3OOHy12ohOHyMa
      k3AaVSBFmUtYcJkFFn71mGSJ8PQo3Z0DxDIZZufj6LwxJI8Wb345RX4H0lQaq2kAUatHp9Ug
      GIwYdRC/uglBUKPV6dBJEgaDAQ0Glq8w8nbzKCprEH9uLuKiyqTegErlxmiYpjEEatAAABVh
      SURBVKtvjGg0QNfgLF6nnZt1jdRON3lqDTV7nuILv/8cD9+1BP3V3+lNXsp9Go4ePcdCLEzz
      sUP0uSuotd9aZ0vjy8Pee5qLw1FSiVniaTN2h5/K7Q/yhd//PI/sqMX6MS/O9O+K6KPQPMSJ
      hkFi6QyBzhYmwgIWmwGVVovRYLjSGdbpiAVGmQzFSMcXmA7GkEQNJpOdguoNPPDgfvZuW4HL
      pEHUajAaDO+ZhKLW6TFo47Rc6iGeTjLRdZEunPjVIoKUJpnOkFyYZmBknHhaIhiax1m5lXv2
      7qTSb77piZpMhFhYSJHO/Gq/Jc7cfJh0OkMmI6Hz1+IcP0HDVBKnbdFlUlOM9w3iWrKJPMuV
      JlBgTqJm+SqWVjip/+k/8+MDTSzZ9zn2rs0jPtlP2FrNikIDgb5BnEs2kWeJMHQ5SOkdu9lR
      DS994+u88MYhBuNeVq0qQQ8Ioo7iygoSnQf51vdeol+o4refeoACq45MZJq+sIEttSVAmumB
      PvQVWyixQ3JulFHJz+rVa1nhD/HiN/+Jn77VSO6We9haqufMK9/nhy8dYiBhY1l1ESYlBFeJ
      OHJzCbYd4o1fHGNU9rFt52a8RhWJaAh0LhwWDYLGTI5unsOvv8aZ9jEEg4vy6lIKPWaGLh3m
      9YMn6Z6RKSgqQC9HkbUunNfMFhMENR6/j9jAWV5+4zAtIylKq6so9ntw6KLUH/k5J9unMFq8
      5JUXkmcSaTn2KkcbRzDnFZPrdOOwqonHwOl1QCpFLJXC5najTc5w7Oevc37GwKpiK6GEgMft
      wWKUGW05w1vHm1D7qsi1GxGlCcaDOSyv9aEVBGUskOLjkYlM0T4QoqyqBKP6o7hxHaXvwiXa
      AhEq1m6jOudK30QJgCJLpJgPTBIWzPi8NtRKmVSFQhkKochySgAUWU0JgCKrKSvDZRFZlkml
      bjYyJvsoAcgy6XT6gx+URZQmkCKrKQFQZDUlAIqspgRAkdWUACiymnIXSAFyiqGWUxxoiPDI
      E3ux/RvKj76zKVlmYbyDUyfrGZxNYPKWsWnLRnJMY7S1Glm/Pu+aR6cJTgfROVzob3lwborQ
      VBiNy4ZBtfjjjM4McO7kKbrGFjD5q5QAKEBKRJhN61nlCXJ5OsOGnNtoGMgy4/0dOFY9yO5S
      MwtTEyTUEjISkvSrw85STA+PYLcsLgAzgwHMdiuGRR9mkr7GJtRVd/LUvV7S0XklAApIROOk
      EwIlq/M53TWBlJNPaqieS5nlbCwxkEpM09U6T+nKPAZPHuB42zgaq4nazY+wplj/3o0JoFbD
      aE8Ppb5leHNyAYgsZJgdaOCl3reYke1s2LWXZT6J6Hwahw4Wus5yqGuU6ZEpDEXreHDPKoyz
      HRxsHibQ00vMXMTee++kwJomFE9hB+YHeuie6qGneYiQNo879+6g3CEy3FbP0XMdJEUL5Wu3
      sbEmH60ISFMEonlsrPShVYHW4lT6AApYCPaT0Bfh8FbinmlhNCGj9heR6mohmJaJ9jUz5/QT
      bDpFr2EZTz7zDPfXWJiJv39dCAGBklV7WO1b4OBPvs8LB+oZCyaQZQlJ42Dz/U/w0F1VzPUO
      ESfN/MQsSSAVmsJYtYunP/s0W1wDHG2ag0SIoLaER377c3xik43Tp7tIkWJ+ap6kJJMMzzAZ
      dXDPk0+zf7md8bkFZka76ZjWcu/jv8P+rcsgPss788Si8wS15vdcOZQrQNbLMNbaQGtokvkx
      NbNzIzAWJb/IjdfRxPjkJKERLZU7VEyN26mr9aMXVcTVNyiTKgioNEaK63ZQtGwjvc0NjI6N
      YyzU4M4rxmvVEZZsmLS/WibVgMttRVSDv6qc9sYQeMHu8qBXi+iLyshpHuC99W1MFFa6sGg0
      qEwmNKJAFIk8fzl2g5qgqEZUXfPNt8mDK97FfAacV5tcyhUgy8nJUUZCJWzZUseyZctYvqyK
      xPgICURcngJCl+uZ95Xh1mixa+e53DdFNLbAzFz4Sptelkin0vxyWoksS4x2XKJ/KkQ8lSSZ
      TJBK38oiBBnisRjx2Cyd57sw5l5ZJicZjxGPRxhtaWLW7sZ0020I6CWByalB5sJRgvOzxK4d
      +iS4yPfMcvZcF8FojJnJEeUKkO3k4ALuDVtYWmQBINdpondsimQKHG4Xnd3jFOdZUSHiW1JL
      /6EjPN8oYZbnsPoFSExzrn6MpVuWYxOvlEnV6WQuHX6FIxGZ3Jo1bKoqRCuN4XDoABA1Bmx2
      ARE1zjwPOkAmysVf/IROUSR32RZ2VZhgFEab3+ZHDSmMebXcvb0IkSguvwudSkCwWrHorm7T
      ZMWh0uG0FuAcOsVrP21DFI24qhzXrAonUrJ6B/FzR3nlxycx5y9VZoRlk9stkhccauZMUy/R
      tICAnuU776DMrv1Qju3DKpMamRni0rkGpuISqMyUr1jJ0iKPUiZVcfsByCTCzAXDpCTQ6C04
      bEbED6lMaiYWJqk1Y7j2dmgqSljSYdbd6j1SmUwqwUIwSDwlI+qM2KxmNGqVUiZVoZRJvR6l
      E6zIakoAFFlNCYAiq133Nmg6nWZwcPCjPhbFRyDzvvUzs9t1O8GyLCtzRxVZQbkLpMhqSh9A
      kdWUACiymhIARVZb1GA4WX53Vo8gqBAE4fpDYm++ESRZBkFAQObKf385tFZGyki82ykRUKmE
      2y6jqbg5WZbf+XflPf2g1/zK+wYs6r2RZfmd9/+dfQjCDYcpfBRuPQCZEMd/8A1euzREEh1V
      6+7h0Yd34FnsWKjQEN/69osU7vsky+Jn+MmJMJ98+tP4zQCz/OCPP8dr87l4TQJqg40dn/h9
      7lnjQ/NB2wUSoSl6JyOUFxei/UiKLvxmWBhr58jR0wxNxzA481m9dQfLCp1obvgSxmg60oRv
      02p8+ls8AWSJcKCbU8dP0z2xgMbmZ+Wm7awt99z2B1xkbgrB4sGohkwiwnQojsPhQEjGicky
      ZpPphk2dWw9AsJk3j0s8/pWvsNwYZ7BjAOFDrhEMoLW4+NTn/4H9VRLtr32VF042s22ND+ct
      PDcdCzIcmKO4oACtMtD7FsXovtCKa8OD7C12Ehlq5FRXG3nujXjNH96LKKVi9HR1YK7Zw7MP
      e4kF2jh45jKVxS4cmtsrVzXWdh6hbh/lZpDTCYILC1hsDuJjYwxJEksqK7lRTG/9L9RZMcjD
      NDX0ULi6iIIly9CIY7z05e/RYxUJdA9iX7GDovkmzvZF2fb0H/PYcjVHXvwxr53sJGUu5N5P
      f5pd+R+wH1kiEV0gOBuks28CT/ndmOjlx3/Txrb/fj8+qYvn/66bO/7kDiZe+2e+eaANwVjM
      I7//LEvi4wyOBdkYm+PgKy/SOx2lr7sHoXAzn3/yQXKkEV770fc42RmkeMN+nnhkO9qhw/zv
      r79CIKmm9p7neHaTnjd+/APeahrDXL6JZ594kFLPb3BJ1dQYo1Swu9SNVgBNYRme4RbCoTDS
      dD/T89DT1oRr/W+xxjrOwTcP0zsXJy7l8ukNq0gGR6g/cphLQzFKVm1l57oqouPNTM5BX1sj
      9nWPsL3CTCoRJ5E0U1HjRysKaHNrWGL8OcOxCJOtfahzSijLNTB4rploSRkF0jRHDxyiZzZJ
      TtV6dm1bizEzzqWj9YzOThGIaFm98w4cI2d4+WQLnOnEWrmNZ7e6mV8I4wj38tbzP6EPOOrM
      Ye36DaDSs3pZGXoxzuUTTTg2rVtEAEzL+f0/+xQv/PiHfPnVBMvvfJyHdtuYGZ6g7D9/mT/c
      c5Tn/qmbR774F2w7+zX+7/rLPLZ8Jd6KNdybs4Tx5kO8fPA8d3xmxU13k4wEeesbX+KCScRV
      voK7qhyo5EmmhqZJAshRJodmSIYu8/KhWe75/B+xzKZFtBlI9c0zNjlLJp1mNhBArnyQv3xs
      P//yredpHZ9l5OI/05io4p4HPJw/9DJvFhZQ1P4imrW/zX/Z7EOtMjDZdYyLs1ae/sIncZn1
      eE2/4cX04hEiooFfVo4VVCJqGVLpDPH5ERoum9i8+xFKLQscPdRH6Z2f4h6fwKXDzYhylI7m
      FuZ1hWzZqKG3q4PeQi+O+REaLxvZtOsRyrxmACQpQSqpQfNObSINenWamZSEFF5AbU8DMvGF
      MNFUGtFip7JuPbnJFMOjYwwOz1LpiRNOGdn4wGewRUZp6ZmkcNdjPGqwvnMFiE90shCOoDYs
      Y98nPvHuFUAO03zgDH2FBZSnBujX2KlSLbJMqrNkI8/8t7/gL/7TffS98V0ujcQRBD02hxmt
      WkQ0unHZtFjMV/7o8EQfh44dZygwTSSRRpI/uM2kNTt4+D/9HX/3t1/moeUJDvz0GNOJ6zzQ
      Uso9eyvpO/wa//KDF2kd+5Vqs2oTLrcNnVqNVnflAjg5PkxKShIKRqjeeA+rS9xUb38Yz0w9
      L//we7x1YRhj6Wo2l1k5/dYL/OTlwwwEE/xGf1NodOOITTB7dYSElIgTQ0Kv04LGSs3KOord
      JuRoBJW/iEK3BVEU0YgqhFSSUCRIPJ1iIZLCm1eAw6pH0FiorltJicf8zm7UagMafYRw5Oo5
      kAkzFbfiMV2n/S9LzAf6GRieIrSwQCKWIhZPIKs0uHwFeO16NForZuMi/k7BTPVKB72N/QwE
      IuTm2BEWVSd48BTfff0MfeNTRBdCpNRWTIabd4Bi8xOMJ0xs2LieqjzHO4XJbkrKsDA3yeT0
      FFPD0yT1OlSCmkwmwHDfMJ3nmxgHCC6Qzl3CXXt2U2MKcL5z7AM3XVhchUZjo3b9ZtYuK8Wq
      ixOM2ti4azd3r/Fz+VgDg7EMOZWr2LNjE6bpQS6Pz97Sy/MflphDmXeKY6daCEzP0N14kZmU
      AZvdgEqtRq/TXakTbDCSDgzSNzLOzMQYozNhJLUOm8mC0epj2fLlVBV60IigUqvR/fJ5V6n1
      BuxmgeazjQSmJ+m8eIp+rQe/RoNGyBAKzTM1MkBn/wixtEQsHsXkq2BJVSkOg4qbfXQmk/NM
      jE4xE4q+5+cqMc5UYIqZmTmiiQxazzLyQmdomEjiciy2TrBWx3Trcd46eIRLPUnu/tzvsr5A
      JDydwFu7FK8qxnTSxPIlhagTC4Q0OWyqK0c92c3BM5dRO/PwFZawosRLOJYmp6gEly5DUrBQ
      UlKIXg0gMTc6zIVzJzh//gJTYhn7H7uXYqsDYk0cOdpKMreMKouXklo3A2cO8ubhc8zoq3lg
      3yZcmhQxlZnKolySiQSOvBJybVoi0STughKWLqlGGL3EwcMn6JqUKCivQDvTwOtvHKZpJM36
      /fez0hLl/OE3OXKhG0PlenavX4ZFL36st+p+vVTYfPlkRho5c66ZkL6QzZtW49ILpFMJ1Hon
      VpP6Sp1gc4rGM6doH1nA5PBRXFpAntfGXH8TZy62MhHTUlCYi0GVQdQ5sZnebWELKjWunByY
      7eTkmUaG52W8ufkU5eXgNKbpbKqndSSKKyef/JI8/GYdA82naO4P4iwqI9/lwmbRkMmosbus
      CJJERpaxOBzoidNaf4auiIllBTYSsgaX04nZJBIc6uBccx+6nDK8Fh1ScoLpeB61NV40gjIW
      SPExkeLzDASi5Bb40d9owu6HaoH2Iydomdewbsc2Sq5O0FcCoMgSGeLhKClBi8n4bvNMCYAi
      qylflyqymhIARVZTAqDIasqImSwiyzKJxPW+VcxeSgCyjCT9GkYw/gemNIEUWU0JgCKrKQFQ
      ZDUlAIqspnSCFYBMJp0imQa9TnObUxRlZEkilUyQysioRA1arQaVIJFOg+Y2Z3/dLlmWSCcT
      JNMSKlGjBEAByCkGW09x5GKQ/Z+5H9ctjVu/waZkmBtu4cz5dmaiabTWXFZtWI/fMkZrs4mN
      G6+dEphkYiCAMa8Qy61M+gYgwWT/DIZCH5Z/Qz3jcKCLM2cbmQgl0bsLlQAoQIpHCGX0rC0M
      c3kizZa826j6IktMjvThXX0/e4sMROfnSKpv9Kkvk04lbzrW/7rPSaTI/JuGsCXoa+7CsXI3
      OwvtZOJhJQAKiEUipJIaKtYUc/LSMOncMtLDpzgTXsaOJTZSkRGaW6LUrHTTcewQF3qnEXUq
      qrY+ydaKX5kvLQgYjUbaWi9h11Tjd9mx67XEwmmmus/x0+43mcmYWL1zH6uLBca6AhRXlDPf
      cphfdM8QmZhG7VvKffu24Jpv5eWLwwRHhonpvGy/ew/VOUlGhiYpLc1jpquV1kAPw10ThAQ3
      2+/ZRY1ToLvhFGeaBkhhoHDNNnasKEEnAukA46kidhQ50QigMVqVACggPN9P0liN1WHEGz3K
      SKyUAn8l2sOtzFVsQu7rIJW3ifm2s8znrOPpuwoIN73K+cz7P4UFQUVB7Q5EQzMN9UdpteSy
      avUqXBpQW/PYsutehIVe2vvGSRT7iC/EyABiIoq3bh87ijQEWg9S3zrHPl8c2bGUx/bsJTVx
      iQMNvZTenUcsEiMjg5CMkdAWsv+pe4ldPk9nOMpMcpKxhIeHntxFeqSd1uDCu1eYRJSoWof2
      2plqH8ULrPj3LM1w4wXqp/voa1YRXghROxamqNSJ1x0jEBhjbtxETY3A+LCV6loPWpUKlXiD
      OsGAoNaTV72O3IqVDLW3MD01ga1AjSMnD6dJSzhlxqD51TrBeuwOE6II7qJ8aAoDYLE70Ikq
      dL4CHOcHeO9ADgP+IhcmtRoMBtSiQByZHE8RFr1IUBRRCdescm704o63MJOuxnP1zFcCkOXk
      aD9j8jo++alaTMD8WCcDgSGiJUtweQroaD5NrGwHDrWOtGWBCy29UGJnZnyOTKEMUpJgKInJ
      ZkItCMiyxHDLWeaN+biNAlOzc2Q8PoQra3rcRIqZwBjjsTgDDd24l98HTBCem2R8fIG5/gbC
      /jrMN92GCpOgpnusHZ25jNjYOBHR8+6vBQclRQnOHLvAimo/mXhECUC2k+MCxRvq8FuvlKA2
      iuVkdHPIGbC53BgcheT5zQiocJQuxVN/gfPnhlBHEujKBEiH6e+ZpHxlJeardYItTjv9rU30
      xsBTupS6Cj8aSY3Pd6VzrdGZ8eRoEdGSW1mAEUiTZKjtAlGNCk/5JtYX6GAU5kfaqZ+QMXgr
      2LEiFxVx8spyMYoCuFy4jFeWhtDY3PhUBqzGXPzjk7RevICUkjEW+a+5UqnIW7qFROt5ms6d
      x5hTpswIyya3WyVyfuAib59qJpgQ0Ftz2bZnJwW3fv/ypj6sOsHhqT5OHz3FSCiFxpLLqk0b
      qM5zKHWCFbcfAFlKk0pnrixorBLRqMUPbeFiOZNGUqnfe6JKGdKoUKtudR9XvoRLp9NIV49R
      ffUYlTrBCqVO8HUoY4EUWe3/B7ngjLayREqVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WXBc13Xv/es+Pc8TuhuNeSAGkiBIgiApUjRF0op95UHxtR3lVuxcO7bL
      rpQrqcr3PeTLU/KUt1Tdz0+pRCnbSZyKy5ZjxaXJlklR4kwQAEFinhpTo+du9DycPveBFGWa
      4iQ2CTZxfg8SyO5eWOew/2fvvdZeayskSZKQkdmiKDfbARmZzUQWgMyWRhaAzJZGFoDMlkYW
      gMyWRhaAzJZGFoDMlkYWgMyWRhaAzJZGFoDMlkYWgMyWRvW7f0in02Qymc3ypaYpFApotdqq
      2atUKiiV1Xs+Pe32HofNB7GnkDfDVYdzw5OEMoqq2RPFMoKguv8bH8Feu89GX7vnE9krFoto
      NJpquAaAJEmUSqWq2nwQH6t3h7c444thXr+0utluPBSff27bJxbAs8JdBZDwT3Budg2HvYGB
      vT33VEpFLLORzqJVC2h0BgRl9Z6EAJJUIbTqJ4eBJp+76va3OvF4nB/+8Ifo9Xr+9E//FIPB
      wOLiIq+99hqDg4N0d3fz1ltv8dnPfpZoNMrbb7/NH/3RHxEKhdi+fXtVn9pPmrt+r4spkX0n
      TlAHRKMRbDY7sXgSnUZJMhxAafeSWV0miY7+7mYS0SAzk9fQmFvZvbsFhdpKMR3HYtIQCccp
      qS2oMmuE8lr6ejtRPcRUL+6fYDGlxmMtU6lIsgCqTDQa5ejRo+zdu/fW350/f57vfve7vPnm
      m/T09NDT00M2m2VpaYmjR49y9uxZurq6UKvVm+j5o3OPB3uGs+++i8/dirIUY6fZzNziEi5d
      nrSqgWYpQUg0Y6gkSBWKxNM5mlvbqfNtoxiZIWkyklhaZFuDkYnFCgd7RX55cQK1SsJod9Pl
      szywk/5onn17dyAoIDAzwtXFMDpjHS0OmF6JIIo6+rfXcWV0htbte1DGwrTv28340GUc6gLj
      wSylXBG9TqCzt5/w/DihTJE9fX1Mz85gdDVxoK+zCrezNjEYDLzxxhu88847fO9738Nms6HR
      aDAYDBgMBnQ6HQaDAYD+/n7efPNN3G43p06dYmRkhK997WtVXxA/Ke7htZFDJ04w2NeBWiqx
      vLRINJlF0NvY1upDUKlxOp2YDPpbplSKCpFIjIpSSWTNz2owhkJQ09bZjk6jxtvUwf79B/Da
      Hi5aYlVDKF2gVCqxFM1x7Phx3Poc6ZKeA586yvYGGxqLHZfDRmojQblcRiwXyBXKaPRWnjv6
      ItvaWzh8YC+V+CrL8TxOmw2kIvaGbezfwl9+gFKpxMDAAA0NDcTjcWKxGGq1mt/+9rdEIhGy
      2SyTk5NMTk5is9kYHBzE5/PhdrvRaDTUchzlriOAra2NDyca3d29rISSDO7ZiUWvQq1RIqnq
      0GoFcDYjaDRs62hDoxRZWUtg83VSLwZoHNiLwWakvqJF0DbS3wmJnIRG/XBr7+auTi5dPMuc
      wUVvSz1n3juFzdtBg02NWqnEYLGgrJQpFopY66zYdUUunr2MyeZEZzSgVoLZYkFQa7F4W9iW
      yxHLi2h0Rpw6HVt9QuX1egmFQre+2Mlkks985jNcuXKFz3/+8xQKBdxuN4IgUKlU8Hq9mM1m
      jEYjRqOxZp/+IIdBq8arv3i/JqNA3/nCwCf6rBwGlbmNHW1u3J7qhRSfRB6grd5WNfu1iiyA
      KtFWb+NgFQVQ7Sdste09K9Tu5E1GpgrII0CVKF39Kanpf6ueQQkK1VydP0X29F/4P6iaD1bR
      mU+OLIAqIYklKMobCR+Iinjrx0QiQalUwuVyAbC+vk40GqWnp4dkMsnKygrd3d0kk0my2Swt
      LS0kk0lstuqsX2pCAKVslHMXRlAYXezf24f2YdLIH0MqtYHRZEFOKG8u5XKZn/3sZ5hMJl55
      5RXS6TS/+c1vcLlcBAIBwuEwTqeTxcVFMpkMpVKJAwcOkMlkbstaPwo1IQD/9CI7Dh7FplEg
      FVOcOTOMd9su3HpIJIKUVQ7S4VmSFRvPDfSwPHmV1bSawd3dxCMBIvECNl2R6eUEvd0dnD39
      GxxNuzjQ38zolVHqu/bQ4n7wzLRMdZiamqKlpYVSqQSAUqkkEokQj8cpl8sYjUZCoRCpVIrm
      5mai0SgLCwsEg0EaGhrwVCHoUBOL4HQZLDoVgiAwOjLGroOHSC9PsrzkJ1wy4tErUDma2OnM
      MjSxRKxkob8BRmbCTE7N0NTeRrlQoJSJMrm2wfa+3Tx/oI+5ofOE0gUuXxne7Evckvz0pz/l
      4sWLvP3222SzWQwGA9///vf5+te/js/n48/+7M/4zne+Q3NzM1//+tf57Gc/S7lcpqenh5GR
      kar4UBMjQKvHxPlLwzhtVnQaFfOzM2REFXUaAw2t9bARIx5cIVsq4GhvJjQ/x1y+jMntxdzQ
      gkUnMBmJ46v3EkeinNtgdmEFrcWG12LCarFv9iVuSf7u7/6OZDLJ5OQk8XgcSZIYHh5mdnaW
      r3/965w+fZqRkRH+8A//kHK5TCaT4eDBg/zbv/0bJ06cqIoPNZEJlqQKiWiYkkKL02ogHIpg
      sDrRq0Cp1lCIhZlaD9Dga6PObiadiJIpKalz2SiVSui0WrIbMTbyFcxmM2qpQCxdxmU3EA3H
      UBmtOK3GR/Jx+a1/wDbxL1W64mcb/Zf+EVXr4dv+Ts4E3wOFQond9dF8z+vz3fa63uGi3+G6
      tSfFbHdhvvmacLNM0WBxYLg1zdfivbG5Ec/v2frEPqo0oLNWxRYAElR1k9LTZE/59HztamIE
      qAWCwWBVFmUf8rRngp+VvUA1sQiWkXlcPD1jUY1TXFhk49LlqtkTRZG8IGyaPdPxYyhvFsE8
      y8gCqBKFqSkSb7612W5UDcOB/bIAnhYK6TRKkwmhmCFT0WDWPVwdajYZYSUYp765DbNWSXDF
      j8paD5kQFUMddVb9/Y1sUSRJ4uc//znbtm2jv7+fUqnEz372M0KhEC+//DKXL19mdXWVF154
      gcnJSTQaDUePHiUSidDV1bXZ7t+XmlgDxBcX2QCK8WXmgw+336ZSSDJybQ6tTmD48gjlbIjZ
      UBahUmB6cRltJc1SeOPxOP4M4Pf7SaVSJJNJAFKpFIIg8JnPfAa/389LL73ESy+9xLVr17BY
      LOTzeaampvBVKbr2uKmJEUAsb3Dx3XfRpII4+j7D0PtvE81K1HftJeMfYiNXoaxUI2Ylnntx
      L6OnL5BWmPmDF49QjqdwNbfQ0uihEotwfWqKhYUNVMUk07MLeOpd5KU65tfPM7ueobu7g8nr
      45RVBp4/cgSrrnrz8FqjVCpx/vx5enp6SCQSSJKEXq8nlUrx3//933zuc59jbm6O06dPc/jw
      YWKxGDqdjpWVFX7961/zyiuv0N3dvdmXcU9qQgCCysLhE4cwBieZypfICXUcP9bC0GgEo7uJ
      gQYvCxtlbMkI0cgycVGPz26ghIRWpyYd3UCsOEnkKnRt70CoM9LtUqMxWWj3WLi2WiGaV3H8
      +Auk5ofYwIDPYkZRqQBbVwCiKKJWqzl37hyVSoX9+/eTSqXQaDTs2LGDmZkZnE4nu3btYnp6
      mi996UucOnUKg8FAuVwmn89v9iXcl5oQgNZiQQUotWasSjNmq8h7H1yja9cAUi6GQq3BZBDQ
      Shbq3FZ8i5cpoUSlUKC1urCvrfHee+/j6+zDqFFi0WtQCgI2iwUEHRaTCq/Wwun3TtO1Ywf1
      uquUKyAIW3u7qE6n48tf/jL5fJ5C4UZXDq/Xy8GDB4lEIvT397O4uMjGxgYvvfQSAPv377/V
      UqWnp2eTr+D+yImwKjH7ox+jeYaiQL4f/B9UdXV3ff1ZSYTVxAhQC2h7e7FVtSheRKhyHuBh
      7ClNpqr97qcZWQBVQtPSjHn/YNXsPe1bF54VaiIMKiPzuJBHgCpxfmmRy1eHNtuNW7zc28e+
      xqbNduOpRxZAlRAliaIo3v+NTwhRqtz6OZPJEAqFaGtrQ5IkkskkCwsLdHZ2Yjabb5UgqlQq
      QqEQ27ZtI5lMYrc/+4VCNSGA6PI0IzMrmBwNDOzqvntrdUni+uQUbXUWwhU9LW4786NnmYlk
      UemcvHB4z8dG9UvpKGmlFbuhJm7HQ/OrX/2KcDjM97//fSqVCq+//jo+n4+pqSm+/OUv89Of
      /hSHw4FCoaBcLlMsFkmn0zz33HOb7fpjpyb+xddWA3T0DeCz6klHVpmem0drdpKOx+gdOEBq
      +ToLoSID+/eQSqUQLRqy0o1LUwpmnju6j6lLw+RySYp5NapiCoXdzMzQJQRHO10ukYLaxOLM
      DMtrIXoGDqFKLXN1Nsyewb1E50dZzWjYt7OVK5eGsLfsoLfFvcl35cHw+/23tRBRKBTY7Xau
      Xr3K7t27mZiYoKOjg1KpRC6XY2VlBYvFQjgcxufz0dLSsoneP35qQgA7Bg8yPnyZ82UTXm2Z
      1v49zI9Osa+vgclACn2+SCm+wNXF1jue8PlUiHPvxzAb7eSzcSIxA4aNFSS1m2gKOho1FJIL
      xA0uUskSBw50cm1iheDSEIJGzfD4MkI8jLWxh3xkhRRGGrSqqhdYPS5+/vOfUyqVmJ2d5fjx
      49hsNpLJJN/+9rf52c9+xsmTJ9FqtUQiEf7+7/+ecDjM9evX6e3t5cKFC7IAngbWl/0oDDbU
      qSyi0oDRoMZktqLVqFGKZaIbGXz1buKVO+fgglqP22YnvRqhpLQTXpunGA3T1dWGx6lnZmaG
      vU03boPBbEWj06JRitjsLswuLzaXnYLey8z8LI7+7dTpk0xPL9DoddTEJom/+qu/olAocPbs
      WQACgQAul4t/+Zd/oa+vj29+85skk0lmZmbQarUEg0EOHjzIf/7nf9Lf37/J3j9+aiITXMyl
      icZTGG0OdEoJlU5DMV9Cp1GSLysoZRMUygr0ZisKsYRWLVBGiVatIpeKE9vIoTNacFh0RCMR
      UGqx2IwkI1FUBisWHZSVOiSxjE6rJJ8HhZgllsxgcbgoZ+LkJTVOq4FIJIbeYsdq1N3m42sX
      z3MhFt6kO3Qn/3PHLg40ffT0ftrzCnIm+B5o9Cbq9bdnJnW6G8XuOg3oNB8VwX94SR8+nfVm
      Ow3mj6IZLrf31s913vpbPwsAKs1N2wAW6o03q+h1bj4sd/fWf/SZ30WtVGJQVzPR9GiTLHUN
      H1rxJKmJEaAWkIviHw25KF5GZhOQR4AqcX78LBEpWDV7m70Z7knbQwKxUkEQqvdMfhAfa2IN
      UAtMhyZ4a+m/N9sNmYekJgSwujBFMiciaI20tzajvkehilgqkCtKmH4vSiMj83HUxBrAYDKx
      vrSG3my8rad/YnGRyM3W2h+ST8Xwr4aesIcytUpNjAD2Oi8O2zoet4vl65eYXk2gt9UhBBcJ
      zc4xuHMnk1cukFA6+Oz+js12V6aGqIkR4HcJpUocO3EMKwUaO7vZd/h5DKRRGx0Uo2Gym+2g
      TE1RIwJQYHPaUQLbWjy8f+o0Ckcjnnor0+fPk67oQCzha25Cq9FhMT37Hc1kqoMcBq0SPz71
      qhwFqkFqYg1QC/R6d+L1fvw2iU/C0x63r3oe4DHYfBB7t40AH/Z/kXl4EolE1Y7uBG5VaG0V
      e1B9ATyIj7e9KgiC3DngE1Lte6dQKFCrH64JcC3bkyQJpVJZVVE9iI+3/Ta1Wl3Vi9pK/OaK
      nzeGzj2x3/eP/+8XsJsfPNlXbYFW297j2Az3ID7eVW6SJBELrZGXtHjdThDzrIfi1NU5CQdj
      uJvqkaXyEaJYoVB6kkXxN2auwWAQv99PfX09TU03ukDEYjGKxSIej4f5+Xk2Njbo6OhgdXUV
      nU6Hy+Uin89jNpvv9Qu2BHcVQGp5kuvhMg4pTbIIruwyIbWLyuIs4aIWjXYJnbUZs/bxO1nK
      RDl7YQSFycWBKpwU/yxx+vRpHA4HbveNGuUPOzoXi0U+//nPs7q6SiaTYWJi4tbr+/btw2g0
      ygLgHgKYDWU5NDCAICUZGvIzOjuB2NTMWjCAqK/HbapDYUgzevY8ospOW6OO6bk1bL5O9m1v
      q6qTizOL9B06ilWtQCpucObMCJ7OXXj0ZebmZinrPexqd3D58giu9p3YlSJ2n5dwYA29osT4
      7BIWZx2JaIydewfJrE2yEK0w2N9JLBYjnCyxq7e9qj4/CSqVCqurq6ytrd1qRKtWq3nxxRc5
      efIkKpUKi8XCpUuXOHr0KBcuXEChULC0tEQ0GqWurg6j8dGOh6117vootaokorkSpXQGdBZ2
      9O1i//PPs723m4PP70NTLpGOhrG17eTI4T6WJ2cRlSrKv7c3pxpkymDW3jwpfvQa/c8dIrM6
      yfJKAEdHH7ZSikB4naLSgF6jYH1plRKwsrzERixKW/8+UtE4O7e3Ep6/zrnROVLheabnVrg2
      G6Czs3YLv7/1rW/x7W9/m1/96ld3vCaKIj09PXzlK19hYWGBP//zP2dgYIByuUxzczPT09Ob
      4PHTxV1HgLaeTs6cP01ZoWPXwD4UkQBqQG80o1EpwWBCY/eSuHqZD1aNtPVuY2omgFZX/V2Y
      bV4T5y5ewWmzoteomJmaIltW4VbrsJp0JNQq9DYnlmCcyZlFvIosk2NXiaYrNNg16LR6rDYz
      akGFoNHidLpwu5147DoURjsGdS2Ut9+JJEl88MEHTE1NcejQIaanp7Hb7bz22mssLy+j0Wjw
      +/0kk0mee+45crkcWq2W7u5u3nzzTV555ZXNvoRNpyYywZJUYSMWoajQ4rDoid4sTNcJoNRo
      qBQKIEAsGsdgdaKR8iTSJQxGPTqVEqVGR7mQR61WUa5AKbtBKl/GbrchoUSnefTQ26u/eJ/X
      L61W4WofjB/+fy9jNz/42WZySeTHUxOZYIVCidX5USMqt9d72+vCzVHHcysTq8Hze9uBPnyP
      RgCN1YGxioe6A2jUAlZj9SIC9yuJVyhqoSvR009NjAC1gFwU/2g8dSNAYm2WocklDFYPA3t2
      oLlf5DEf53ogR7tdoKT3YHkC4VEZmUflrgJYWwnQun0PjQ4jqVAQY52LdDCM1qBmanocDD52
      tdcxMTFOWjKxv8dNKlugpIOyvsLy9DX8CQWDuzu5fvkiKlc7O7uaamX/9UMjBscpLN0ZifnE
      9kQRqcobwz6JPXXnp1HaazdKdj/uKoDefQeZHB3i/Jwau1ZBs91OaGkFi8eKo7MPdXAa/4oC
      wdVOj7DO3HIaUJCNBklh4NrYFDqlyDWbkVgG2ps0j9rr6alGXBumOPEv1bVZVWufzJ7gaNua
      AgiuLCKqTWiFDCpBxfTkBPFwnB0eC+v+eZSZAs3NStYCfnKVHPVNDhLJGzkApUqNw1WHy+XC
      Zbeg2tAxOzNDo8+D9hM81CSpwvryPDlMtDR6EJTPqIqeYiYmJvjlL39Jd3c3X/ziF5Ekiffe
      e4/Lly/zpS99icXFRa5evUp/fz/FYpFAIMBXvvIVJicn2bdv32a7f1fuKgCnxweaFM1tnZg0
      EI4l6W7tQIytY7HbaejswVCIEbDYaKnvwWnR46yroJa8ODU6PLt3kc6L2KwWhKYWWgyW+68j
      7kJscZzlrA6vrUKlIj2yAObnZ2hu3Xb3cwZk7mBtbY3vfOc7OJ1OANLpNNFolO9+97u8+eab
      fO5zn6Ovr4833ngDg8FAY2MjZ8+eZe/evZvs+b25qwDUWiNe70dpco/nRhhRMrdjVyhQKBRI
      Jj17nKC8GZLT/87CV211YLoZatR6bg9bPixLsSIDe3ciKGBtapixpQhao4sWp4aFtXUafK34
      /eOUC7Dr0BHmh8+TK0l07z3EyvUzCPY2XEKSa7PrtHR1szg+xFIwR5dHyaVrc5g9HRw/sPOR
      fHzWsdls/OhHP8JsNvONb3yDcrmMyWTCaDQiSRKJRIJf/OIXbN++HafTyfXr17FarfzjP/4j
      hw4d4tixY5t9CR/LQz8DFUrlrRi0QqG49eV/nNjUEsFUnlKpyHI8zwvHjuPW5cnkoe/AEZqc
      Vjr79nF0TzPLgTB23w6OHehkPbiB2dPGwT09pNI53A498Rx0b+/j8P4dBP1LmJweTHq5BuJ+
      SJLEgQMHEASBRCKBKIqEQiHeeOMNjEYjfr+fPXv2MDMzw44dO2hsbMTr9dLZ2UmxWNxs9+9K
      TUwCmrq2sTx6nouj02xr9XH29HsUDT48dXaMGgEoMzVygaGlMru7miGzxJmxCD3tLlwOOwrA
      YjIgCibqXVZsOgXnL4/TvL0XZT6DUiVv7L4fXV1dqNVqPv/5z6PT6VCpVLz00kvU19fz4osv
      4vP5UCqVfPnLX0ahULBz5052795Nb28vhw8f3mz378ozkQgrZjKkKxUcm7i9d/mtf8BW5SjQ
      04D+i/8/qo7jd/z9M58IqyU0RiOOTfZBaBpEW99QNXuiWEYQqvfP80ntKV3dVfPhaeSZEMDT
      gODqQuM5UjV7T/vWhWeFmlgDyMg8LuQRoEqk3vk1xXd+XTV71UyaN/7w2VubVAtZANWiUkGq
      cjXc44hOLC0t4XQ6b8Xvp6amUKlUtLe3Mz09TT6fp7e399b5wlarlVKphMlkur/xGqQmBBCd
      n0fV3o4+5sdfdLDN+xDRHqnM5PBlVuJpXE097G6zcubsJXxdu4ktjGBv7MZotuGxP/u1salU
      ildffZWXX36ZvXv34vf7GR0dRalUIkkSgUCAVCqF3+8nk8kA0N3djc/ne2YFUBNrgFI2Sxmo
      lHJkC2Uiy9O898EFEtkiK/PjvP/+GSbGr3L6wlXK5QLXLn3AxbE5REkiH49QMHk5fuwYqsQq
      k+NXmA+lCS9OMja3CoiUyxLZxDrvv/cegXiaa5fe58LVWcTajxDfolKpcPLkSY4cOUK5XEaS
      JLRaLdPT00xOTrKysoJer2d+fp5t27YRDAbZ2NggGAxy6tSpZ7ZjYE0I4HYKzK1keP5AF9PX
      F4jnKxzc1Y1gdtNjVDK3fI1ry2ky4SAZsYJCqaAiioBEpSLR2NrBnoNH2LN7F/2799Bepyae
      zHF9ZoXnjhxBFx7n2nqO7EaEdLb6Bf6bxcbGBtFolNOnT3P58mUSiQR2u50vfelLtLS04PV6
      EQSBffv2sbi4yPe//306OzsRBAG1Ws3KyspmX8JjoSamQBqTCRWg1BgxK0wYjHlOnR6hs28A
      KRdDodJg0CnRiCacngYabHEqag0qhQKt1Yl5eZmTpxbxtu7ApFZh0qlRKAUsJhMIWkxGNW6V
      kfdOnaKrdzv1+iQIqqoe2LbZ2Gw2vvnNb5JKpZAkiVQqhV6vJxqNMjg4SGdnJ5cvX0YURV54
      4QVEUby1i3NiYoKWlmdzS/QzkQl+Gpj90Y/RvPnWZrvxsTT9+79SEsWnOq8gZ4JrHG3XNixV
      7A5d1U7JcgH9XZEFUCU07e1Yn3uuavbkzO2T4dmZ5MrIfALkEaBKXFxZYuT6aBUtPlguuNPp
      4n/1P91VV08zsgCqREkUSReffKw8W7pRbFKpVFhaWiKfz9Pa2opOp0MURZaWlrDZbOj1epaW
      llAoFHi9XlZWVvD5fIg3F8fVPu2lVqiJq46vzTE86cfsamLPznvU8koSk9MzNLssRCUdTS4b
      i2PnmQpl0Brr+NTBXR875ytlE2QVZqz62uwRCpDNZnn99dfp7u6moaEBnU7HyMgIExMTJJNJ
      XnzxRa5du0Y4HKa9vR2/309vby/ZbJZPfepTW1YANbEGWPYvs61/P7u6m8nE1rly6RzXJ6e5
      eO4CiVyZldlrfHDuCpmSSCKZRMxnSedvPBkVChOHj72AsZIjm0+RSOZIh8Oki3muXjrL9dlV
      yrkE2WKZ5YUZzp05SzRTJhn0c/b8EOlCmaWpUc4Pj1PIp7l09gOml8ObfEfuJJ/PEwgEyOfz
      6G62gYzH43zhC19g+/btGAwG/uAP/gCXy4XdbicSibC6uko2m+XSpUts1Wh4Tch+x779jF25
      zAI26jVFvN29LI7N0N/tZHZtA0MmQyowx+jinY23sql1rp8MYTG5KGSihGMGDBvLVNrqWIvk
      6a5XU0gukzC42Ahn2NXfyNTMCqHFi1QEJZfHbChiSzha+siH/IQKKjwa1VPX4shqtfI3f/M3
      XLlyhdHRUfbt24ckSeTzeTKZDLlcjtHRUV566SV0Oh3d3d1cvXoVv9+PIAikUiksFstmX8YT
      pyZGgHAggMnpQ0uBslKP1aLHYrVjNOhQimUi6QKdbU1UxPIdn1VrTLS0tSJkNigolMRCKyys
      rKNSm2lusDM9PcWHJxsZrXaMJgMahRKr00Nn7x66W5y0tLUSWJglrXbQbBeYmpyj8kTvwP1J
      pVL8+7//O8PDwzQ3NzM6Osr27dv5j//4D7LZLJFIhJGREf75n/+ZcDjMysrKrTrfeDyOXv/g
      naafJWoiE5zPJFgPJ7A4PRgFCZVBRyFbxKBTkC0KFNNhsiUFJpsDpVhEr1FRRECvUZOOhwjF
      M+gtDrx2I+uBNRD0OOosRNYCqM1OHHoFJaUeSSxj0CvJZkFRThGMpXC4vZRSYbIVLV6nicBa
      EKPDjdNye/vp1y6e50LsyU+Nulx1fGvfwfu+72mvMNusTHBNCKAW+K9LF7gUjzzx39vlquN/
      791/3/fJAvh4ZAFUCbk9+qOxWQKoiTWAjMzjQh4BqsTlyYvEFdGq2avqZrgasPc4bD6IvZoI
      g9YC4+tjvLX035vthsxDUhMCCK0uksqLKDV6mnz1qIS7R+DFcpFCScKgl4+okbk/NbEGUCgk
      ZsenERWK27JPyaUlor/XiSG/EWVhOfiEPZSpVWpiBKjzNeNZitHUWM/a5BCTSzGMDg/K9XmC
      02YG+/qYG7vChmDnWH/zZrsrU0PUxAjwu6wnixw/cRyLlKOho4fBw89jJE1ZoSGxvEJ2sx2U
      qSlqRgBmmxUl0NHg5L2TpxAtPtweExPnzrNRViMAvqYGNGotJmP1T6uXeTaRw6BV4senXpWj
      QDVITawBaoEudy92l71q9p72uH217UlAZRN8vG0EKBaLT/VxNk8zsVgMh6N6pzo0ZocAABVO
      SURBVBSUSiXU6uqdXPO025MkCVEUq1qY8yA+1swa4GlHUeXWI7K9J2NTXgNUiX/91Vl+PVq9
      /EO1C24e1N53vrCXI7vu3wXuWdkMd9fxJhkNkimIKFUaXE7nHdnXiihSrlTQ3GeIyeZyGLZA
      sUWxJJLM1H4D2WLpo/Pkc7kcqVQKt9tNpVJhYWGBQqGA2WzGbrfj9/tvFdbH43GamppIp9M1
      VVl2VwFk00muDI3T3NeP3eFA9XvPj2I6zerGBh1NTff8BVevjXFw8P771e9FORvnwsVhKkYX
      B/bsRCOfcP3YkSSJ119/nXg8zve+9z0kSSIYDBIKhQiFQni9XrLZLJcvX0apVJLP5xkcHCSR
      SHDo0KHNdv+BuasA6lu20RRI0rWtjfTaLOcmlzB526lXJxn3R2hu6WRx9grTI9fZe/R5pi6d
      ppAXadv/AonJ88SzsG3vjUqljbCfi8NTSFo7B/c0c/n8KMmsgkOHOkiLdWiy61gaW7FoP340
      8c/M07X/CHaNAsppLly4irtjJ3XaMouLc5R0Hna22hkevoqzdTs2oYLVU0csGESnLDI5t4LF
      6SIeibNj914ygWkW4xUG+jpIxBOEkgV2drU+lhtcqywvL2M2m28tSgVB4NChQ5w5c4Y9e/Zw
      6dIlXnnlFV577TUKhQKxWIzFxUUSiQQtLS00NFTvwMDHyQM9SqfHx8iVRQrZFMF4mSPHj9Fc
      Z6VjxwBH+1tJFyXqmrv49KEdZHNxJG0bx5/fSXA9BkAsHGTHweN0W8r4g2HaB4/TWW9DZ/Wy
      sT5DJF3GoLn76n+jBHa9GpVKxdjIGN17Bkj6x1laXsXY0I0hG2c1uEqqrEKnUbC2sEQJ8PsX
      SIRD+Hr6iAZCdHX6CM5f58zQJJGVSSanlxie8NPa3FiVm/ks8ZOf/ISxsTF+/etfE43e2Oad
      y+WIRqM0NDRQLpcpFAqIoshXvvIVXn75ZQDa2to4f/78Zrr+UNxTAEaz6Ub2taMLQalApzfi
      cxs4c/IUK/E8eq0WpVaPTiWg1+tRqLSY9E40lRVOnpukscGF2WTC5W1g6tIp5nMGWuoczF76
      LdcX11GqdFgVWZQ2D6p7rNhb3QYuDF9jet6PWiWwurxEThRQqXQ4bEZ0WjVGhxu3WeD65BxI
      OeanJohlKqjUWowGE3aHFZ1Gg6BS4/T46N2xh0aXnobWdkw6OR3y+/z1X/81f/EXf8Ef//Ef
      I4oiKysrrK+v09vbiyAIbNu2jR/84Af4fD4EQSAcDnPgwAGGhobwer2b7f4D88SjQPmNEJeG
      riFYfQxs9zB2dZmde3eiu8e8XpIqxIIBCgodHoeJQGAdo8ODUSWh1OgQ8zkUAgTXw5icHnRS
      jnAyj8ViwqARUGoMlPJZNBo1ZREKmRjxdBm3x4WEEsNdpl4Pw6u/eJ/XL60+sp3N5i++vJ8T
      A+33fd8zHwV6XOgsbo4c++jk8X377589VSiUOL0fzSkbm28P06kMNzo0NN06xEFH8+8dI/bh
      ewQVaLUeLFU+WVsQlGjV1c2MbkYYVFBurQCDnAeoEnJR/KMhF8XLyGwC8uqvSoiRaYqB31bP
      nihSrPLGsKfZ3sPaVJjcqDtPPPLvlAVQJcTlSxQmqnsi+52NHp9tew9jU2jYt3UEIEkVIoEV
      8goDPq8TQT7zSuZ3SKVS/OQnP+FrX/saRqORtbU1fvnLX2KxWNizZw/vvPMOyWSSL37xi3zw
      wQd89rOfpVQq0dLSUhtrgMTSJLOhNMVClor46Gv2xcU5xKetu63MJ0KSJC5evEipVKJ0s0HC
      1NQUx44dQxAEGhsb+cu//Et27txJuVxmYGCAyclJotEoBoOhNkaAxXCOwYEBVApYn73K6EIQ
      ndlNq1PDwuoavvo2lpbGKRZgz+FPMTt8jmxBYvu+QyyPn0VhacGtSTO5GKGpvZ3ZsUssBjL0
      NmgYnljE5G7l+T09m32ZMp+AUChELpfD7XbfEkBjYyO/+tWvEAQBrVbL6uoqdXV19PT08Itf
      /AKn08nExARXr16tDQFY1RDNFnFqFfgjGY4fP87c1YukMgI79h/BmN1AZRmgXoowvLKOvX4H
      B70FhpYSGF3N7NrRw8jZ32JQi4RSFXp27GJbz07G3nsDNGYUciS4Zkmn0wQCAUZHR2loaECp
      VLK4uMjevXuZnp4mHo8zNjbG4cOHMZvNnDhxgmg0SjweR6fT1YYAmrs6uHDxA2YMdfQ0eXj/
      vVNYPW002bQYNAJky0wNX2DJ7GNwcBszoxd5f11J/74Bsqkb+1iNBj2psgaXw4y5Eubc5ev0
      9vQQH19Eo5WbaNUqHR0ddHR0EA6HsdlsBAIBjhw5wtDQEPv378ftdrN3717M5huZUaPRSF1d
      HTabjXQ6/WwkworpNKlKBecm7kNffusfsFU5CiRzd4SGfRj+6If3fM9TuRXicaAxmXBusg9C
      wx60rv+navbKooiqinH2p93ewxbFK8zV2XD3TAjgaUBwb0fjOVY9g9U+Kf4pt/c4tkI8CDUR
      BpWReVzII0CVSL/7W0onT1XNniRJVe2U8Ens2V75I0yffvRs69OMLIAqIZVKVFKp6tqsqrWH
      t1e5eQp9sVhkdnYWjUZDW1sbgiCQy+VYWFigubmZSCRCMplEp9NRV1dHNBqltbWVdDqN2Wx+
      LC1PqkVNCCC2uIiqtRVdfJmVop12j+nBPyyVmRkbZim8gad1OztbLJw/dwlPZz9J/yiWhm4s
      Fisuq+H+trYoU1NTDA8P09XVRWtrK5Ik8fbbbwMwPj5OR0cHa2trjI+P4/P5KJfLZDIZkskk
      hw8f3mTv701NrAGK6TQloFLMkMqXia3N8f7Zy2zky6z5pzh75hxTk9c4c/k6olhi6uolRqaW
      qEgS+USUjMbJsWNHqYSXmBofYjaYIrI0ydXZVRSUyBcq5DdCnHn/A9aTWaZHLzIy6adS8wHi
      6hAMBgkEAsCN4vgPp1Nf/epXEUWR7du309nZyZEjR9Dr9QSDQZaWllhaWsLv92+y9/emJkYA
      sbzBxXffRZMK4ug7wcRSiIH+Fq5eX0BVSbCzq5nJ9TTNyiwL61OMTK4hlVdobvOhLpbQG/Qo
      FQImnQKLr41dVgPdLg1KnZEWp4rxQJ71+Vn6BwcpB8b5zWwIvXINj7eeetuTjUo8jRw6dIjD
      hw/zX//1X7S1teF2uykWixQKBSRJQpIkxsfH+fSnP83AwABra2uMjY3R3NzMxYsXaW1t3exL
      uCs1MQIIKguHT5zghef2olWpECp5/MvrqHRadEYjeo0Wm82KVqNGUOvwNjQxMLALnaDEaLcQ
      W1pgcnqC1awKu0aBUqlEqbz5f4UCUKBXK1n2+8lV1NT7Gunb1Y9VXxO357GzsLDAP/3TPyGK
      IpIksbS0RFtbGz/4wQ9ob28nl8vh8XgwGAwoFApWV1c5ePAg169fp66ubrPdvyc1kQku5XIo
      9HqUpTz5igpFMUU4mcPj9VIpFdBp1BRECUEsg1ZDMrROvqKhvt6FoFCQzyQIRVO4vD4MgkhO
      VKJTKcjlixh0ArmSEjUFAsEYdreXfCJIXtLgddfd8zyy32X2Rz9G8+Zbj/lOPFls//vrWP7H
      //jY156VksiamAKpP2ytqNZhANDaaTbfLKZX3XhNJwDc6O7g8t7elElntNFstN38k4D+ZrLR
      YLjx2Rvn6aloajYCYPI+fJ8ghSCgeMb2FCmEmvh6PBI1MQLUAnJR/KMhF8XLyGwCz/4Y94QI
      pDaYy1fviL4nsXnNa7bQ7tjsbYSbiyyAKjEfi3IhFt5sNx6KQ81tsgA224EHQSzlWF5eQ2+r
      w223cNfMuiSxkU5j1KgpoMSg1ZCKrbMeTWOy11Hvsj5Rv2uJQCDA66+/zne/+10AJiYmeOed
      d+jt7aWlpYV33nkHr9fL9u3beffdd/nqV79KKBSit7f3ie/grCY1sQaYHhulqFCyEY9zv5r4
      8YlJspE1/OEEAMFFP6JGxez1ce52fEUhGSCYKt3l1WcfURQ5e/YslcpHnQIuX77MN77xDRKJ
      BG63m29961vkcjkmJyc5cuQIZ8+eBajqOWGbQU2MAE67iSszc3T1DbB27QKTkQ1ymRIWtYhn
      1wsIwavMLUfpfu7OnYulQoqFmTQGcx352BJLCQOG1CqVZidjp4epa99OlyVBUm9h8sJJymKO
      um3Po05Msbgep23HASLTZygYGtjbYub06AKtXX30b6uN/vcPwtjYGA0NDUSj0VsHy3V2dvLq
      q69SX1+PTqfjX//1X7Farezbt493330Xt9vN6dOnuXr1Kn/yJ3+CskZ7itaE19b6Tl48foTE
      0jSpionDxz9FR1sXxz61BzGTJ5nOY1AXWQ4m7/iswezlUyeO4apkSUkVymWRXDaHQmOizmUl
      n01RLpUQKxLOpm5OfOYwikSSOf8qRrMFJBGX24NULCDpLDjNejKpFM9SV5VSqcT169e5dOkS
      fr+fRCLB3NwcR48eJZvNMj4+zuDgIIVCAb1ez4EDB/D5fLjdbtRqNbUcSa+JESAWmGNiPojN
      24LdqEZAidlsAEGDxaRBodNQxoXFokOtsaHSGTBJH85LM5z97Um0eifteisLy0MUSyr6JJFS
      uYzGpEdj1GPSClSMekCDxWGjR9WCP5JFo1WTK5UQ1DoUSJTLIpZn7MyzwcFBBgcHeemll3A4
      HMTjcV5++WWGhoZ48cUX0ev1XLt2jYMHD97a2mC1WtHr9ZhMppp9+oOcCKsar108X5NRoJe3
      7/xEn31WEmE1MQLUAq12B64qbvx6Eie7+yxyVEwWQJVosFi31FaIZ4XanbzJyFQBeQSoEr+d
      foeTJ9+umr3NOiJps+w9DpsPYk8WQJUoiUXSxfRmuyHzkNSEAK5fOsWUP4qtoY3Dg7vR3jxR
      sphOUzEY0P1OGC6firGeLNPa6N4sd2VqiJoQwI7BI5TEEXoP7kXIRvngzHVatu8gcPEDAjoL
      B/p3szJ9FbWrnU6Xikx2625rkHk4am4RfGVknD0HBwnOzlDf3sP+5w9h01UoFsuMXr6C/NWX
      eRhqYgT4XYxagcX5BYpo0GlFZqcXKBkrKA11uM2iLACZh6JGBKCkq68XNdC7aw9r6xGaWjox
      ayVK6xGsDidqbYSOjmbsFiMmg5zclnkwakQACgzGm53b1Hoam5puveJruLEr09jwUSG7ahOu
      ShBU6NXV2yMkSdy97uFZtHfzP0/aR3kvUJWQi+Ifjc3aC3SbANLpNJlMpmoObCUKhQLaKrZF
      eRJ7gZ4me5IkUalUnriP8ghQJT4sJJHtfTIkSUIURVRVnL8+iI81FwZ9Wql2C/CtZu9x8CA+
      yiOAzJZGHgFktjTC3/7t3/7tZjvxrJCJrXL+4jWMzjoqyRiiwUBsfQ1Ba0QtfPyzJrYyzZlL
      IyRKKlwGkfNnL4HRjkUrMXLxHLGiFqtQISNJVNIR4gU1Rt2d82RJEgkuThMpqLEatQTmrzM6
      G8DtcbMRmOPi2BxOtwdxI8DZS2OYHB7SyTgGg55wYAVBb0GlVPyOPYno6hyryTJOq5HF8SGG
      rk4g6exoCmHOXr6OxelBmY9y7vwQaksd5fwGgqAlEVqhorWg+b3GwqVsgovnzpEoqnHZtIxc
      OEuspKHOqmdi+ALLcRGPy8LixDCTywnqPVYi4RR6LawGIlgstx+MIhbSDF04x3qqgseu5sIH
      Z5lbXsXhaWBl8grTaynqPQ4Cc9cYmQ7g87mIhhMY9GqWVwJYrZZayQPUBhNTiwwM9HBtcp4m
      XYWKRiQSzVPnvXskYjmY4YUTJ1ABY5fPsWPfANOj45SdGhzt/WT9Y6zRgmBREpxdp//Axx8P
      WikXkSoV0vkilfIGyxGJHfVqZlbDZFYi7OvxMT6/ipRcZnBvD2NT8xh1EnplnrWNCnW+358v
      lykUJfJiDoBoAU6cOAGInD8zyYE92xidmUdbirF73x6ujU3hdptQFPPMBfMM1t85/06ncuw6
      cJjF8RFmx4LYuvaS919jcSaG6NqGPb3AwmyJuMJFhyPB3GqEUrJIaj2MobX/DnuZdJbuPQcJ
      zw4TXAdDaz/PtdjJhPykNB7adEEmZ1fJ5tTsblVybS6MupChEPUjubsBeQpUVTRGE0aTA4OQ
      p1Ta4NwHw3hamlDeYy2mJs17777L6MwKSq0Bk96A0yiQqKhwmg143GZSmSzD751E17wNzV1s
      CWo99d4bXd4qUhaT2Yvd7aKUSWIw1WF0OFDlC2gNFgwmK0ZFmXI2wsmzY7S0Nd+xb16hUNPQ
      4L2VSCon1nn33ZMsrIcwmJzoTRZ0koigNWEwGLBplBQKCX576jyt3ds+dh++ze0hujKHztlC
      SdDQZDNgc1qJxcvU15mxuetIraep81oxO+uRchusz19lPqWm3nJnPN/irCMT9lM2NmHRqVif
      usipDy4QTovUOSxYG+rJBhLYnVZM7mYU6SixlSmurRdpdNxIWsoCqCKFTIpUKkKmrEettnD4
      U/tYm5ujfI8wg7Ohk6NHDpAOBigWsmxkM4TTInZlmdBGhsB6EovRwJ6jJ8gvjpN7gH4sSoWR
      VHKN6HoItclGJhUkFYlQ1ukoZJJkUgnSkgqVwcWJ53cxNzV3nwP08rT0HOLwwDYCgSTZVJhs
      KkleISDmU2QyGeIFEa3Wxonjh5i7Nv6xbWNCC1Mo7M20N3twCkX8sQyxUBynQ81qcIN4IIjF
      Zya4liAZXkFhsOFt38U2Wxl/5M6+q7HlOXI6N10dDaAxcuj5Y7Q5KqSyZYKRBPGlVYwNdqLh
      BKnAIpK5DkdjN/2NWuYDG4C8BqgqDouG4dEFtvfvxKBVY7S5MAllJJUejerjnzXlVJgLI1Ns
      69tNe6OLq5dHaN3ZT6PPw8rEMFrfdpqcRtR6Iw0eC4mUiMlw59OwVEhw/uwIiVgQhakeryHH
      bFRBX1cLdn2F0fkY/Tu68Np1DF2dZ8eunRh1aiwODzpFHkltvM1HScpy/r0LxBNR8kobqtwq
      1xYT9O/aQYNdw8Vri+zq76OxzszQ8Bhdu/Zi1qsxmB3YDSJ59OjUt1/zRjTA1OQ0S8E4nTv7
      CE4Moa3vob2tiY2l62T1DXR3tCDFF1nNmenr9CIIauqbm0gnopgt5ttGlnQyzNTkFP7VIB6v
      l9mxIbJaH7t2tFOMLBIUHezqakaVDzMVUjCwoxmVoMLd2EI2GcFitchhUJmtjTwFktnSyAKQ
      2dLIApDZ0sgCkNnSyAKQ2dLIApDZ0sgCkNnSyAKQ2dLIApDZ0sgCkNnSyAKQ2dLIApDZ0vxf
      9G5TEm2qBEsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='packed bubbles' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='side by side bar chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='side by side circle' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='tree map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEhUlEQVR4nO3aS29UZRzH8d8w03amtwEqtxaoCNhEEl0Q3WjCwpV7N74YfRG+AzduTdgR
      o3FjTADBcKkCAnKpIE3HdnqBdpw5LtygTDKLwkHy/X5285xZ/BfzPfM8c6ZSFEURCWrHyx5A
      epkMQGgGIDQDEFqt3+Ktr77I+v3bZc8ila5vAGv3bmbl+pWyZ5FK5xZIaAYgtIEBDE3sTJI0
      9hz45/X45IudSCrRwAAmZo+lNjqe106+n9roeMZmXk+lWkt1pJFUKqmONLKjNpSdc2+nWm+U
      MbP03PQ9BD9tc3kpk0fm0v51PpNH5vKktZjpUx+lsXc6rcvn0zx+IkuXz2X88NFUqrUs//JT
      il6vjNmlbRv4DbC1vJTR6dls/LGQsZnZdNbbSZE8/OGbPF58kNb8xdSn9mZ94be0b/3sh1+v
      lIEBdDbW8uf8hXTW2mldvZDOajutqz+mPrUv3c0nqTXG0r59PWt3b6Z59K1kh+dqvToq/f4N
      eunzz3wOIARv10IzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCE
      ZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA
      0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQD
      EJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRm
      AEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCqxRFUfx3
      ceXS6XSWF17GPFKpav0Wtx6cy+bDy2XPIpXOLZDQDEBoAwPodnvp9or0iiK93jPHhX+/d8B1
      6f9mYADfXnqUry8+zJ1H67lyd+WZ60VR5Nr9dpLk+/nF5z+h9AL1PQQ/bXJ0KK3VzbQ3Oun8
      VeTL7+6k0+3lw3f25cyFBzmwu5Gz15by8QeHcv5GK/N32/nk1OE0x4bLmF/aloEBVCrJyWO7
      c/rsQg5OjeaNA2OZqA9lYWkjJ2abee/NqTSGqzlxuJnW6lb276rn8VY3zbEyxpe2Z+AWaE9z
      JLvGhzM3M5G5gxNZWevkxu+rOT49kZmp0VSSbGx2M3+vnf276mmODqcxXC1hdGn7+j4IWzzz
      qc8BhODPoEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBC
      MwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIz
      AKEZgNAMQGgGILRav8X6oXdTm5wuexapdH8D1TLR60jbpAQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
